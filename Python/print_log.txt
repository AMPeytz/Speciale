===== Dynamic Portfolio Optimization Parameters =====
Number of Assets (D): 2
Total Years (T): 5
Time Step Size (Delta_t): 1.0
Number of Time Steps (step size * T): 5
Discount Factor (beta): 0.97
Relative Risk Aversion (gamma): 3.0
Proportional Transaction Cost Rate (tau): 0.0
Fixed Transaction Cost: 0.00075
Yearly Net Risk-Free Rate (r): 0.030044121348376644
Expected Yearly Net Returns (mu): [0.07 0.07]
Covariance Matrix (Sigma):
[[0.04 0.  ]
 [0.   0.04]]
Include Consumption: False
Minimum Consumption (c_min): 0.0
Number of State Points (N): 150
merton_p: [0.333 0.333]
Integration Method: quadrature
==============================================

Time step 4
include consumption: False
Step 2a: Approximate NTR
starting point [0. 0.]
direction [-0.333 -0.333]
Center Point: [0.333 0.333], Edge Point: [0.2507 0.2507]
starting point [0. 1.]
direction [-0.333  0.667]
Center Point: [0.333 0.333], Edge Point: [0.2824 0.4343]
starting point [0.5 0.5]
direction [0.167 0.167]
Center Point: [0.333 0.333], Edge Point: [0.4093 0.4093]
Center of NTR: [0.333 0.333], Radius of NTR: 0.1163
Step 2b: Sample state points
Best solution found. Point: tensor([0.3306, 0.3926], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3306 0.3926]], bt: 0.2768
Best solution found. Point: tensor([0.2628, 0.2726], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2628 0.2726]], bt: 0.4646
/opt/anaconda3/envs/Peytz2/lib/python3.11/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(io.BytesIO(b))
Best solution found. Point: tensor([0.4192, 0.2808], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4192 0.2808]], bt: 0.3
Best solution found. Point: tensor([0.3143, 0.2258], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3143 0.2258]], bt: 0.4599
Best solution found. Point: tensor([0.2322, 0.3047], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2322 0.3047]], bt: 0.4631
Best solution found. Point: tensor([0.3773, 0.3825], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3773 0.3825]], bt: 0.2402
Best solution found. Point: tensor([0.3270, 0.2948], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.327  0.2948]], bt: 0.3782
Best solution found. Point: tensor([0.3816, 0.3275], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3816 0.3275]], bt: 0.291
Best solution found. Point: tensor([0.3945, 0.4146], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3945 0.4146]], bt: 0.1909
Best solution found. Point: tensor([0.3900, 0.4195], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.39   0.4195]], bt: 0.1905
Best solution found. Point: tensor([0.3962, 0.3249], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3962 0.3249]], bt: 0.2788
Best solution found. Point: tensor([0.2669, 0.4105], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2669 0.4105]], bt: 0.3227
Best solution found. Point: tensor([0.4113, 0.3253], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4113 0.3253]], bt: 0.2633
Best solution found. Point: tensor([0.4230, 0.3860], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.423 0.386]], bt: 0.191
Best solution found. Point: tensor([0.3687, 0.4353], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3687 0.4353]], bt: 0.196
Best solution found. Point: tensor([0.3846, 0.3061], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3846 0.3061]], bt: 0.3093
Best solution found. Point: tensor([0.2852, 0.3596], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2852 0.3596]], bt: 0.3552
Best solution found. Point: tensor([0.2774, 0.2583], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2774 0.2583]], bt: 0.4643
Best solution found. Point: tensor([0.2305, 0.3424], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2305 0.3424]], bt: 0.4271
Best solution found. Point: tensor([0.3913, 0.2684], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3913 0.2684]], bt: 0.3404
Best solution found. Point: tensor([0.3905, 0.2687], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3905 0.2687]], bt: 0.3408
Best solution found. Point: tensor([0.3323, 0.3311], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3323 0.3311]], bt: 0.3366
Best solution found. Point: tensor([0.3697, 0.3373], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3697 0.3373]], bt: 0.293
Best solution found. Point: tensor([0.3569, 0.4032], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3569 0.4032]], bt: 0.2399
Best solution found. Point: tensor([0.2990, 0.2984], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.299  0.2984]], bt: 0.4026
Best solution found. Point: tensor([0.3214, 0.2664], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3214 0.2664]], bt: 0.4121
Best solution found. Point: tensor([0.3454, 0.2727], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3454 0.2727]], bt: 0.382
Best solution found. Point: tensor([0.3400, 0.2748], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.34   0.2748]], bt: 0.3852
Best solution found. Point: tensor([0.2629, 0.3920], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2629 0.392 ]], bt: 0.3451
Best solution found. Point: tensor([0.3831, 0.2448], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3831 0.2448]], bt: 0.3721
Best solution found. Point: tensor([0.2439, 0.3670], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2439 0.367 ]], bt: 0.3891
Best solution found. Point: tensor([0.2888, 0.3537], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2888 0.3537]], bt: 0.3575
Best solution found. Point: tensor([0.2635, 0.3602], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2635 0.3602]], bt: 0.3764
Best solution found. Point: tensor([0.4162, 0.2830], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4162 0.283 ]], bt: 0.3007
Best solution found. Point: tensor([0.3078, 0.2363], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3078 0.2363]], bt: 0.4559
Best solution found. Point: tensor([0.3767, 0.3995], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3767 0.3995]], bt: 0.2239
Best solution found. Point: tensor([0.3340, 0.3669], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.334  0.3669]], bt: 0.2991
Best solution found. Point: tensor([0.4510, 0.3307], dtype=torch.float64), Delta+: [0.     0.0001], Delta-: [0.121 0.   ], Delta: [-0.121   0.0001], Omega: [[0.3299 0.3307]], bt: 0.3386
Best solution found. Point: tensor([0.4532, 0.3518], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1233 0.0219], Delta: [-0.1233 -0.0219], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4448, 0.3724], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1149 0.0425], Delta: [-0.1149 -0.0425], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4371, 0.3916], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1071 0.0616], Delta: [-0.1071 -0.0616], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4109, 0.4237], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0809 0.0938], Delta: [-0.0809 -0.0938], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4287, 0.4082], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0988 0.0783], Delta: [-0.0988 -0.0783], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3950, 0.4349], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0651 0.1049], Delta: [-0.0651 -0.1049], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3777, 0.4434], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0477 0.1134], Delta: [-0.0477 -0.1134], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3379, 0.4543], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.008  0.1243], Delta: [-0.008  -0.1243], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3171, 0.4511], dtype=torch.float64), Delta+: [0.0129 0.    ], Delta-: [0.     0.1211], Delta: [ 0.0129 -0.1211], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3574, 0.4492], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0275 0.1192], Delta: [-0.0275 -0.1192], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2964, 0.4449], dtype=torch.float64), Delta+: [0.0335 0.    ], Delta-: [0.    0.115], Delta: [ 0.0335 -0.115 ], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2639, 0.4289], dtype=torch.float64), Delta+: [0.066 0.   ], Delta-: [0.    0.099], Delta: [ 0.066 -0.099], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2789, 0.4380], dtype=torch.float64), Delta+: [0.051 0.   ], Delta-: [0.     0.1081], Delta: [ 0.051  -0.1081], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2479, 0.4153], dtype=torch.float64), Delta+: [0.0821 0.    ], Delta-: [0.     0.0854], Delta: [ 0.0821 -0.0854], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2154, 0.3653], dtype=torch.float64), Delta+: [0.1145 0.    ], Delta-: [0.     0.0353], Delta: [ 0.1145 -0.0353], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2339, 0.4015], dtype=torch.float64), Delta+: [0.096 0.   ], Delta-: [0.     0.0715], Delta: [ 0.096  -0.0715], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2231, 0.3827], dtype=torch.float64), Delta+: [0.1068 0.    ], Delta-: [0.     0.0527], Delta: [ 0.1068 -0.0527], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2135, 0.3438], dtype=torch.float64), Delta+: [0.1164 0.    ], Delta-: [0.     0.0139], Delta: [ 0.1164 -0.0139], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2119, 0.3230], dtype=torch.float64), Delta+: [0.118 0.007], Delta-: [0. 0.], Delta: [0.118 0.007], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2156, 0.3015], dtype=torch.float64), Delta+: [0.1144 0.0284], Delta-: [0. 0.], Delta: [0.1144 0.0284], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2233, 0.2836], dtype=torch.float64), Delta+: [0.1067 0.0464], Delta-: [0. 0.], Delta: [0.1067 0.0464], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2474, 0.2487], dtype=torch.float64), Delta+: [0.0826 0.0812], Delta-: [0. 0.], Delta: [0.0826 0.0812], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2627, 0.2347], dtype=torch.float64), Delta+: [0.0673 0.0952], Delta-: [0. 0.], Delta: [0.0673 0.0952], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2787, 0.2236], dtype=torch.float64), Delta+: [0.0512 0.1063], Delta-: [0. 0.], Delta: [0.0512 0.1063], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2361, 0.2650], dtype=torch.float64), Delta+: [0.0938 0.065 ], Delta-: [0. 0.], Delta: [0.0938 0.065 ], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2972, 0.2198], dtype=torch.float64), Delta+: [0.0327 0.1102], Delta-: [0. 0.], Delta: [0.0327 0.1102], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3199, 0.2130], dtype=torch.float64), Delta+: [0.0101 0.1169], Delta-: [0. 0.], Delta: [0.0101 0.1169], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3377, 0.2126], dtype=torch.float64), Delta+: [0.     0.1173], Delta-: [0.0077 0.    ], Delta: [-0.0077  0.1173], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3578, 0.2173], dtype=torch.float64), Delta+: [0.     0.1126], Delta-: [0.0278 0.    ], Delta: [-0.0278  0.1126], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3947, 0.2315], dtype=torch.float64), Delta+: [0.     0.0985], Delta-: [0.0648 0.    ], Delta: [-0.0648  0.0985], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3768, 0.2218], dtype=torch.float64), Delta+: [0.     0.1081], Delta-: [0.0469 0.    ], Delta: [-0.0469  0.1081], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4110, 0.2420], dtype=torch.float64), Delta+: [0.     0.0879], Delta-: [0.0811 0.    ], Delta: [-0.0811  0.0879], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4259, 0.2604], dtype=torch.float64), Delta+: [0.     0.0696], Delta-: [0.096 0.   ], Delta: [-0.096   0.0696], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4368, 0.2771], dtype=torch.float64), Delta+: [0.     0.0528], Delta-: [0.1068 0.    ], Delta: [-0.1068  0.0528], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3333, 0.0000], dtype=torch.float64), Delta+: [0.     0.3299], Delta-: [0.0034 0.    ], Delta: [-0.0034  0.3299], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4463, 0.2921], dtype=torch.float64), Delta+: [0.     0.0378], Delta-: [0.1164 0.    ], Delta: [-0.1164  0.0378], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4505, 0.3144], dtype=torch.float64), Delta+: [0.     0.0156], Delta-: [0.1205 0.    ], Delta: [-0.1205  0.0156], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0000, 0.5417], dtype=torch.float64), Delta+: [0.3299 0.    ], Delta-: [0.     0.2117], Delta: [ 0.3299 -0.2117], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0000, 0.7500], dtype=torch.float64), Delta+: [0.3299 0.    ], Delta-: [0.     0.4201], Delta: [ 0.3299 -0.4201], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2917, 0.0833], dtype=torch.float64), Delta+: [0.0383 0.2466], Delta-: [0. 0.], Delta: [0.0383 0.2466], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0417, 0.2917], dtype=torch.float64), Delta+: [0.2883 0.0383], Delta-: [0. 0.], Delta: [0.2883 0.0383], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3750, 0.4583], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0451 0.1284], Delta: [-0.0451 -0.1284], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.8333, 0.0417], dtype=torch.float64), Delta+: [0.     0.2883], Delta-: [0.5034 0.    ], Delta: [-0.5034  0.2883], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2500, 0.0000], dtype=torch.float64), Delta+: [0.0799 0.3299], Delta-: [0. 0.], Delta: [0.0799 0.3299], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4583, 0.5417], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1284 0.2117], Delta: [-0.1284 -0.2117], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0417, 0.9167], dtype=torch.float64), Delta+: [0.2883 0.    ], Delta-: [0.     0.5867], Delta: [ 0.2883 -0.5867], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2083, 0.5000], dtype=torch.float64), Delta+: [0.1216 0.    ], Delta-: [0.     0.1701], Delta: [ 0.1216 -0.1701], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1667, 0.1667], dtype=torch.float64), Delta+: [0.1633 0.1633], Delta-: [0. 0.], Delta: [0.1633 0.1633], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.3750], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.0451], Delta: [ 0.2049 -0.0451], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.5000, 0.0417], dtype=torch.float64), Delta+: [0.     0.2883], Delta-: [0.1701 0.    ], Delta: [-0.1701  0.2883], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1667, 0.4167], dtype=torch.float64), Delta+: [0.1633 0.    ], Delta-: [0.     0.0867], Delta: [ 0.1633 -0.0867], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.5417, 0.2917], dtype=torch.float64), Delta+: [0.     0.0383], Delta-: [0.2117 0.    ], Delta: [-0.2117  0.0383], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.7917, 0.1250], dtype=torch.float64), Delta+: [0.     0.2049], Delta-: [0.4617 0.    ], Delta: [-0.4617  0.2049], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.6250], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.2951], Delta: [ 0.2049 -0.2951], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2500, 0.0833], dtype=torch.float64), Delta+: [0.0799 0.2466], Delta-: [0. 0.], Delta: [0.0799 0.2466], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1667, 0.7083], dtype=torch.float64), Delta+: [0.1633 0.    ], Delta-: [0.     0.3784], Delta: [ 0.1633 -0.3784], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1667, 0.6667], dtype=torch.float64), Delta+: [0.1633 0.    ], Delta-: [0.     0.3367], Delta: [ 0.1633 -0.3367], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.6250, 0.1667], dtype=torch.float64), Delta+: [0.     0.1633], Delta-: [0.2951 0.    ], Delta: [-0.2951  0.1633], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.5417], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.2117], Delta: [ 0.2049 -0.2117], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.2500], dtype=torch.float64), Delta+: [0.2049 0.0799], Delta-: [0. 0.], Delta: [0.2049 0.0799], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4167, 0.1250], dtype=torch.float64), Delta+: [0.     0.2049], Delta-: [0.0867 0.    ], Delta: [-0.0867  0.2049], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.1667], dtype=torch.float64), Delta+: [0.2049 0.1633], Delta-: [0. 0.], Delta: [0.2049 0.1633], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.5833, 0.1250], dtype=torch.float64), Delta+: [0.     0.2049], Delta-: [0.2534 0.    ], Delta: [-0.2534  0.2049], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2917, 0.7083], dtype=torch.float64), Delta+: [0.0383 0.    ], Delta-: [0.     0.3784], Delta: [ 0.0383 -0.3784], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2500, 0.5417], dtype=torch.float64), Delta+: [0.0799 0.    ], Delta-: [0.     0.2117], Delta: [ 0.0799 -0.2117], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2917, 0.4583], dtype=torch.float64), Delta+: [0.0383 0.    ], Delta-: [0.     0.1284], Delta: [ 0.0383 -0.1284], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.2083], dtype=torch.float64), Delta+: [0.2049 0.1216], Delta-: [0. 0.], Delta: [0.2049 0.1216], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0833, 0.8750], dtype=torch.float64), Delta+: [0.2466 0.    ], Delta-: [0.     0.5451], Delta: [ 0.2466 -0.5451], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0833, 0.3333], dtype=torch.float64), Delta+: [0.2466 0.    ], Delta-: [0.     0.0034], Delta: [ 0.2466 -0.0034], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3750, 0.1250], dtype=torch.float64), Delta+: [0.     0.2049], Delta-: [0.0451 0.    ], Delta: [-0.0451  0.2049], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.7500], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.4201], Delta: [ 0.2049 -0.4201], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.6667], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.3367], Delta: [ 0.2049 -0.3367], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.5000], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.1701], Delta: [ 0.2049 -0.1701], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.7500, 0.0417], dtype=torch.float64), Delta+: [0.     0.2883], Delta-: [0.4201 0.    ], Delta: [-0.4201  0.2883], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.7083, 0.0000], dtype=torch.float64), Delta+: [0.     0.3299], Delta-: [0.3784 0.    ], Delta: [-0.3784  0.3299], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1667, 0.1250], dtype=torch.float64), Delta+: [0.1633 0.2049], Delta-: [0. 0.], Delta: [0.1633 0.2049], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.6667, 0.2917], dtype=torch.float64), Delta+: [0.     0.0383], Delta-: [0.3367 0.    ], Delta: [-0.3367  0.0383], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2083, 0.3333], dtype=torch.float64), Delta+: [0.1216 0.    ], Delta-: [0.     0.0034], Delta: [ 0.1216 -0.0034], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0417, 0.7083], dtype=torch.float64), Delta+: [0.2883 0.    ], Delta-: [0.     0.3784], Delta: [ 0.2883 -0.3784], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0000, 0.9583], dtype=torch.float64), Delta+: [0.3299 0.    ], Delta-: [0.     0.6284], Delta: [ 0.3299 -0.6284], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.6250, 0.0833], dtype=torch.float64), Delta+: [0.     0.2466], Delta-: [0.2951 0.    ], Delta: [-0.2951  0.2466], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2083, 0.0417], dtype=torch.float64), Delta+: [0.1216 0.2883], Delta-: [0. 0.], Delta: [0.1216 0.2883], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.7500, 0.2083], dtype=torch.float64), Delta+: [0.     0.1216], Delta-: [0.4201 0.    ], Delta: [-0.4201  0.1216], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4167, 0.5000], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0867 0.1701], Delta: [-0.0867 -0.1701], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.7083], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.3784], Delta: [ 0.2049 -0.3784], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.7083, 0.2083], dtype=torch.float64), Delta+: [0.     0.1216], Delta-: [0.3784 0.    ], Delta: [-0.3784  0.1216], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0000, 0.0833], dtype=torch.float64), Delta+: [0.3299 0.2466], Delta-: [0. 0.], Delta: [0.3299 0.2466], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4167, 0.2500], dtype=torch.float64), Delta+: [0.     0.0799], Delta-: [0.0867 0.    ], Delta: [-0.0867  0.0799], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2500, 0.7083], dtype=torch.float64), Delta+: [0.0799 0.    ], Delta-: [0.     0.3784], Delta: [ 0.0799 -0.3784], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0833, 0.7083], dtype=torch.float64), Delta+: [0.2466 0.    ], Delta-: [0.     0.3784], Delta: [ 0.2466 -0.3784], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4167, 0.0417], dtype=torch.float64), Delta+: [0.     0.2883], Delta-: [0.0867 0.    ], Delta: [-0.0867  0.2883], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2500, 0.5833], dtype=torch.float64), Delta+: [0.0799 0.    ], Delta-: [0.     0.2534], Delta: [ 0.0799 -0.2534], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.6250, 0.2500], dtype=torch.float64), Delta+: [0.     0.0799], Delta-: [0.2951 0.    ], Delta: [-0.2951  0.0799], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.7917, 0.0833], dtype=torch.float64), Delta+: [0.     0.2466], Delta-: [0.4617 0.    ], Delta: [-0.4617  0.2466], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4167, 0.0000], dtype=torch.float64), Delta+: [0.     0.3299], Delta-: [0.0867 0.    ], Delta: [-0.0867  0.3299], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2500, 0.2083], dtype=torch.float64), Delta+: [0.0799 0.1216], Delta-: [0. 0.], Delta: [0.0799 0.1216], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4167, 0.4583], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0867 0.1284], Delta: [-0.0867 -0.1284], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.5833, 0.0000], dtype=torch.float64), Delta+: [0.     0.3299], Delta-: [0.2534 0.    ], Delta: [-0.2534  0.3299], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0417, 0.6250], dtype=torch.float64), Delta+: [0.2883 0.    ], Delta-: [0.     0.2951], Delta: [ 0.2883 -0.2951], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.8333], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.5034], Delta: [ 0.2049 -0.5034], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0417, 0.0833], dtype=torch.float64), Delta+: [0.2883 0.2466], Delta-: [0. 0.], Delta: [0.2883 0.2466], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1667, 0.4583], dtype=torch.float64), Delta+: [0.1633 0.    ], Delta-: [0.     0.1284], Delta: [ 0.1633 -0.1284], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.5417, 0.2500], dtype=torch.float64), Delta+: [0.     0.0799], Delta-: [0.2117 0.    ], Delta: [-0.2117  0.0799], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0417, 0.5833], dtype=torch.float64), Delta+: [0.2883 0.    ], Delta-: [0.     0.2534], Delta: [ 0.2883 -0.2534], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.4167, 0.1667], dtype=torch.float64), Delta+: [0.     0.1633], Delta-: [0.0867 0.    ], Delta: [-0.0867  0.1633], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.5833, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.2534 0.0034], Delta: [-0.2534 -0.0034], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.7917, 0.0000], dtype=torch.float64), Delta+: [0.     0.3299], Delta-: [0.4617 0.    ], Delta: [-0.4617  0.3299], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.3750, 0.2083], dtype=torch.float64), Delta+: [0.     0.1216], Delta-: [0.0451 0.    ], Delta: [-0.0451  0.1216], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.0417, 0.4583], dtype=torch.float64), Delta+: [0.2883 0.    ], Delta-: [0.     0.1284], Delta: [ 0.2883 -0.1284], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.2500, 0.4167], dtype=torch.float64), Delta+: [0.0799 0.    ], Delta-: [0.     0.0867], Delta: [ 0.0799 -0.0867], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.1250, 0.4167], dtype=torch.float64), Delta+: [0.2049 0.    ], Delta-: [0.     0.0867], Delta: [ 0.2049 -0.0867], Omega: [[0.3299 0.3299]], bt: 0.3394
Best solution found. Point: tensor([0.5417, 0.0833], dtype=torch.float64), Delta+: [0.     0.2466], Delta-: [0.2117 0.    ], Delta: [-0.2117  0.2466], Omega: [[0.3299 0.3299]], bt: 0.3394
Failure Rate: 0.00%
Step 2e: Train GPR models for inside and outside NTR
train gp model_in done 
Early stopping at iteration 557
train gp model_out done
Time step 3
include consumption: False
Step 2a: Approximate NTR
starting point [0. 0.]
direction [-0.333 -0.333]
Center Point: [0.333 0.333], Edge Point: [0.2507 0.2507]
starting point [0. 1.]
direction [-0.333  0.667]
Center Point: [0.333 0.333], Edge Point: [0.2824 0.4343]
starting point [0.5 0.5]
direction [0.167 0.167]
Center Point: [0.333 0.333], Edge Point: [0.4093 0.4093]
Center of NTR: [0.333 0.333], Radius of NTR: 0.1163
Step 2b: Sample state points
Best solution found. Point: tensor([0.4346, 0.3028], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4346 0.3028]], bt: 0.2627
Best solution found. Point: tensor([0.3045, 0.3578], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3045 0.3578]], bt: 0.3378
/opt/anaconda3/envs/Peytz2/lib/python3.11/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(io.BytesIO(b))
/opt/anaconda3/envs/Peytz2/lib/python3.11/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(io.BytesIO(b))
/opt/anaconda3/envs/Peytz2/lib/python3.11/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(io.BytesIO(b))
Best solution found. Point: tensor([0.3314, 0.3355], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3314 0.3355]], bt: 0.3331
Best solution found. Point: tensor([0.3428, 0.2524], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3428 0.2524]], bt: 0.4048
Best solution found. Point: tensor([0.2317, 0.3555], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2317 0.3555]], bt: 0.4128
Best solution found. Point: tensor([0.3413, 0.3937], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3413 0.3937]], bt: 0.265
Best solution found. Point: tensor([0.4375, 0.2938], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4375 0.2938]], bt: 0.2688
Best solution found. Point: tensor([0.4178, 0.4063], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4178 0.4063]], bt: 0.1758
Best solution found. Point: tensor([0.3413, 0.2334], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3413 0.2334]], bt: 0.4253
Best solution found. Point: tensor([0.3143, 0.3251], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3143 0.3251]], bt: 0.3606
Best solution found. Point: tensor([0.4088, 0.2934], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4088 0.2934]], bt: 0.2978
Best solution found. Point: tensor([0.2605, 0.2668], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2605 0.2668]], bt: 0.4726
Best solution found. Point: tensor([0.3791, 0.2367], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3791 0.2367]], bt: 0.3842
Best solution found. Point: tensor([0.3432, 0.3603], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3432 0.3603]], bt: 0.2965
Best solution found. Point: tensor([0.3474, 0.2645], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3474 0.2645]], bt: 0.388
Best solution found. Point: tensor([0.3789, 0.3964], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3789 0.3964]], bt: 0.2246
Best solution found. Point: tensor([0.3721, 0.2306], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3721 0.2306]], bt: 0.3973
Best solution found. Point: tensor([0.3274, 0.3191], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3274 0.3191]], bt: 0.3535
Best solution found. Point: tensor([0.3593, 0.3411], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3593 0.3411]], bt: 0.2996
Best solution found. Point: tensor([0.2858, 0.3787], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2858 0.3787]], bt: 0.3355
Best solution found. Point: tensor([0.3306, 0.2474], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3306 0.2474]], bt: 0.4221
Best solution found. Point: tensor([0.3256, 0.3277], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3256 0.3277]], bt: 0.3467
Best solution found. Point: tensor([0.2784, 0.3650], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2784 0.365 ]], bt: 0.3566
Best solution found. Point: tensor([0.4281, 0.3672], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4281 0.3672]], bt: 0.2047
Best solution found. Point: tensor([0.2290, 0.3143], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.229  0.3143]], bt: 0.4567
Best solution found. Point: tensor([0.3100, 0.3733], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.31   0.3733]], bt: 0.3167
Best solution found. Point: tensor([0.4276, 0.3639], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4276 0.3639]], bt: 0.2085
Best solution found. Point: tensor([0.3715, 0.2473], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3715 0.2473]], bt: 0.3811
Best solution found. Point: tensor([0.2709, 0.3089], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2709 0.3089]], bt: 0.4202
Best solution found. Point: tensor([0.2517, 0.3171], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2517 0.3171]], bt: 0.4311
Best solution found. Point: tensor([0.4461, 0.3546], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4461 0.3546]], bt: 0.1993
Best solution found. Point: tensor([0.4183, 0.3575], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4183 0.3575]], bt: 0.2242
Best solution found. Point: tensor([0.4075, 0.3456], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4075 0.3456]], bt: 0.247
Best solution found. Point: tensor([0.2659, 0.3731], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2659 0.3731]], bt: 0.361
Best solution found. Point: tensor([0.4162, 0.3326], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4162 0.3326]], bt: 0.2512
Best solution found. Point: tensor([0.2668, 0.4165], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2668 0.4165]], bt: 0.3166
Best solution found. Point: tensor([0.4055, 0.4115], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4055 0.4115]], bt: 0.183
Best solution found. Point: tensor([0.4519, 0.3336], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1215 0.0043], Delta: [-0.1215 -0.0043], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4443, 0.3734], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1139 0.0441], Delta: [-0.1139 -0.0441], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4526, 0.3525], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1222 0.0232], Delta: [-0.1222 -0.0232], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4287, 0.4080], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0982 0.0787], Delta: [-0.0982 -0.0787], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4384, 0.3912], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1079 0.0619], Delta: [-0.1079 -0.0619], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4143, 0.4239], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0838 0.0946], Delta: [-0.0838 -0.0946], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3945, 0.4351], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.064  0.1058], Delta: [-0.064  -0.1058], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3607, 0.4518], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0302 0.1225], Delta: [-0.0302 -0.1225], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3792, 0.4455], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0488 0.1162], Delta: [-0.0488 -0.1162], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3389, 0.4537], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0084 0.1244], Delta: [-0.0084 -0.1244], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2967, 0.4471], dtype=torch.float64), Delta+: [0.0338 0.    ], Delta-: [0.     0.1178], Delta: [ 0.0338 -0.1178], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3165, 0.4532], dtype=torch.float64), Delta+: [0.0139 0.    ], Delta-: [0.     0.1239], Delta: [ 0.0139 -0.1239], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2617, 0.4298], dtype=torch.float64), Delta+: [0.0688 0.    ], Delta-: [0.     0.1005], Delta: [ 0.0688 -0.1005], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2465, 0.4129], dtype=torch.float64), Delta+: [0.0839 0.    ], Delta-: [0.     0.0836], Delta: [ 0.0839 -0.0836], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2814, 0.4397], dtype=torch.float64), Delta+: [0.0491 0.    ], Delta-: [0.     0.1104], Delta: [ 0.0491 -0.1104], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2254, 0.3815], dtype=torch.float64), Delta+: [0.1051 0.    ], Delta-: [0.     0.0522], Delta: [ 0.1051 -0.0522], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2349, 0.4014], dtype=torch.float64), Delta+: [0.0956 0.    ], Delta-: [0.     0.0721], Delta: [ 0.0956 -0.0721], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2154, 0.3626], dtype=torch.float64), Delta+: [0.115 0.   ], Delta-: [0.     0.0333], Delta: [ 0.115  -0.0333], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2115, 0.3212], dtype=torch.float64), Delta+: [0.119  0.0081], Delta-: [0. 0.], Delta: [0.119  0.0081], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2142, 0.3436], dtype=torch.float64), Delta+: [0.1163 0.    ], Delta-: [0.     0.0143], Delta: [ 0.1163 -0.0143], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2167, 0.3032], dtype=torch.float64), Delta+: [0.1138 0.0261], Delta-: [0. 0.], Delta: [0.1138 0.0261], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2264, 0.2830], dtype=torch.float64), Delta+: [0.1041 0.0463], Delta-: [0. 0.], Delta: [0.1041 0.0463], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2349, 0.2641], dtype=torch.float64), Delta+: [0.0955 0.0652], Delta-: [0. 0.], Delta: [0.0955 0.0652], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2443, 0.2502], dtype=torch.float64), Delta+: [0.0862 0.0791], Delta-: [0. 0.], Delta: [0.0862 0.0791], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2645, 0.2369], dtype=torch.float64), Delta+: [0.066  0.0924], Delta-: [0. 0.], Delta: [0.066  0.0924], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2979, 0.2171], dtype=torch.float64), Delta+: [0.0326 0.1122], Delta-: [0. 0.], Delta: [0.0326 0.1122], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2779, 0.2258], dtype=torch.float64), Delta+: [0.0526 0.1035], Delta-: [0. 0.], Delta: [0.0526 0.1035], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3383, 0.2150], dtype=torch.float64), Delta+: [0.     0.1143], Delta-: [0.0078 0.    ], Delta: [-0.0078  0.1143], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3176, 0.2139], dtype=torch.float64), Delta+: [0.0129 0.1154], Delta-: [0. 0.], Delta: [0.0129 0.1154], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3770, 0.2225], dtype=torch.float64), Delta+: [0.     0.1067], Delta-: [0.0465 0.    ], Delta: [-0.0465  0.1067], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3583, 0.2168], dtype=torch.float64), Delta+: [0.     0.1125], Delta-: [0.0278 0.    ], Delta: [-0.0278  0.1125], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3964, 0.2307], dtype=torch.float64), Delta+: [0.     0.0986], Delta-: [0.0659 0.    ], Delta: [-0.0659  0.0986], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4118, 0.2411], dtype=torch.float64), Delta+: [0.     0.0881], Delta-: [0.0813 0.    ], Delta: [-0.0813  0.0881], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4269, 0.2550], dtype=torch.float64), Delta+: [0.     0.0743], Delta-: [0.0964 0.    ], Delta: [-0.0964  0.0743], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4378, 0.2732], dtype=torch.float64), Delta+: [0.     0.0561], Delta-: [0.1073 0.    ], Delta: [-0.1073  0.0561], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4511, 0.3133], dtype=torch.float64), Delta+: [0.    0.016], Delta-: [0.1206 0.    ], Delta: [-0.1206  0.016 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4476, 0.2944], dtype=torch.float64), Delta+: [0.     0.0349], Delta-: [0.1171 0.    ], Delta: [-0.1171  0.0349], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4583, 0.4167], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1279 0.0874], Delta: [-0.1279 -0.0874], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5000, 0.2917], dtype=torch.float64), Delta+: [0.     0.0376], Delta-: [0.1695 0.    ], Delta: [-0.1695  0.0376], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5417, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.2112 0.004 ], Delta: [-0.2112 -0.004 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1250, 0.0833], dtype=torch.float64), Delta+: [0.2055 0.246 ], Delta-: [0. 0.], Delta: [0.2055 0.246 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0417, 0.4583], dtype=torch.float64), Delta+: [0.2888 0.    ], Delta-: [0.    0.129], Delta: [ 0.2888 -0.129 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1667, 0.6667], dtype=torch.float64), Delta+: [0.1638 0.    ], Delta-: [0.     0.3374], Delta: [ 0.1638 -0.3374], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0833, 0.3333], dtype=torch.float64), Delta+: [0.2471 0.    ], Delta-: [0.    0.004], Delta: [ 0.2471 -0.004 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1250, 0.8750], dtype=torch.float64), Delta+: [0.2055 0.    ], Delta-: [0.     0.5457], Delta: [ 0.2055 -0.5457], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5000, 0.0833], dtype=torch.float64), Delta+: [0.    0.246], Delta-: [0.1695 0.    ], Delta: [-0.1695  0.246 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5417, 0.2917], dtype=torch.float64), Delta+: [0.     0.0376], Delta-: [0.2112 0.    ], Delta: [-0.2112  0.0376], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.6667, 0.0000], dtype=torch.float64), Delta+: [0.     0.3293], Delta-: [0.3362 0.    ], Delta: [-0.3362  0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3333, 0.5000], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0029 0.1707], Delta: [-0.0029 -0.1707], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3333, 0.0417], dtype=torch.float64), Delta+: [0.     0.2876], Delta-: [0.0029 0.    ], Delta: [-0.0029  0.2876], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1250, 0.4167], dtype=torch.float64), Delta+: [0.2055 0.    ], Delta-: [0.     0.0874], Delta: [ 0.2055 -0.0874], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.7917, 0.0833], dtype=torch.float64), Delta+: [0.    0.246], Delta-: [0.4612 0.    ], Delta: [-0.4612  0.246 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0000, 0.2500], dtype=torch.float64), Delta+: [0.3305 0.0793], Delta-: [0. 0.], Delta: [0.3305 0.0793], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2917, 0.5417], dtype=torch.float64), Delta+: [0.0388 0.    ], Delta-: [0.     0.2124], Delta: [ 0.0388 -0.2124], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2083, 0.2083], dtype=torch.float64), Delta+: [0.1221 0.121 ], Delta-: [0. 0.], Delta: [0.1221 0.121 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5417, 0.0000], dtype=torch.float64), Delta+: [0.     0.3293], Delta-: [0.2112 0.    ], Delta: [-0.2112  0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3750, 0.4583], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0445 0.129 ], Delta: [-0.0445 -0.129 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3333, 0.5833], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0029 0.254 ], Delta: [-0.0029 -0.254 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4167, 0.2500], dtype=torch.float64), Delta+: [0.     0.0793], Delta-: [0.0862 0.    ], Delta: [-0.0862  0.0793], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.6667, 0.0417], dtype=torch.float64), Delta+: [0.     0.2876], Delta-: [0.3362 0.    ], Delta: [-0.3362  0.2876], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0000, 0.0833], dtype=torch.float64), Delta+: [0.3305 0.246 ], Delta-: [0. 0.], Delta: [0.3305 0.246 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1250, 0.5000], dtype=torch.float64), Delta+: [0.2055 0.    ], Delta-: [0.     0.1707], Delta: [ 0.2055 -0.1707], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5833, 0.2917], dtype=torch.float64), Delta+: [0.     0.0376], Delta-: [0.2529 0.    ], Delta: [-0.2529  0.0376], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1667, 0.0833], dtype=torch.float64), Delta+: [0.1638 0.246 ], Delta-: [0. 0.], Delta: [0.1638 0.246 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0833, 0.7917], dtype=torch.float64), Delta+: [0.2471 0.    ], Delta-: [0.     0.4624], Delta: [ 0.2471 -0.4624], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2500, 0.0833], dtype=torch.float64), Delta+: [0.0805 0.246 ], Delta-: [0. 0.], Delta: [0.0805 0.246 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.6250, 0.1667], dtype=torch.float64), Delta+: [0.     0.1626], Delta-: [0.2945 0.    ], Delta: [-0.2945  0.1626], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2083, 0.7083], dtype=torch.float64), Delta+: [0.1221 0.    ], Delta-: [0.    0.379], Delta: [ 0.1221 -0.379 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2917, 0.0000], dtype=torch.float64), Delta+: [0.0388 0.3293], Delta-: [0. 0.], Delta: [0.0388 0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1250, 0.5417], dtype=torch.float64), Delta+: [0.2055 0.    ], Delta-: [0.     0.2124], Delta: [ 0.2055 -0.2124], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3750, 0.5417], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0445 0.2124], Delta: [-0.0445 -0.2124], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.9583, 0.0000], dtype=torch.float64), Delta+: [0.     0.3293], Delta-: [0.6279 0.    ], Delta: [-0.6279  0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1250, 0.8333], dtype=torch.float64), Delta+: [0.2055 0.    ], Delta-: [0.    0.504], Delta: [ 0.2055 -0.504 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2917, 0.2083], dtype=torch.float64), Delta+: [0.0388 0.121 ], Delta-: [0. 0.], Delta: [0.0388 0.121 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2083, 0.4583], dtype=torch.float64), Delta+: [0.1221 0.    ], Delta-: [0.    0.129], Delta: [ 0.1221 -0.129 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0000, 0.5417], dtype=torch.float64), Delta+: [0.3305 0.    ], Delta-: [0.     0.2124], Delta: [ 0.3305 -0.2124], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1667, 0.0000], dtype=torch.float64), Delta+: [0.1638 0.3293], Delta-: [0. 0.], Delta: [0.1638 0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1667, 0.5833], dtype=torch.float64), Delta+: [0.1638 0.    ], Delta-: [0.    0.254], Delta: [ 0.1638 -0.254 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0833, 0.0417], dtype=torch.float64), Delta+: [0.2471 0.2876], Delta-: [0. 0.], Delta: [0.2471 0.2876], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2500, 0.0000], dtype=torch.float64), Delta+: [0.0805 0.3293], Delta-: [0. 0.], Delta: [0.0805 0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0833, 0.7083], dtype=torch.float64), Delta+: [0.2471 0.    ], Delta-: [0.    0.379], Delta: [ 0.2471 -0.379 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2083, 0.2500], dtype=torch.float64), Delta+: [0.1221 0.0793], Delta-: [0. 0.], Delta: [0.1221 0.0793], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1667, 0.3750], dtype=torch.float64), Delta+: [0.1638 0.    ], Delta-: [0.     0.0457], Delta: [ 0.1638 -0.0457], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4583, 0.1250], dtype=torch.float64), Delta+: [0.     0.2043], Delta-: [0.1279 0.    ], Delta: [-0.1279  0.2043], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0833, 0.8333], dtype=torch.float64), Delta+: [0.2471 0.    ], Delta-: [0.    0.504], Delta: [ 0.2471 -0.504 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.6250, 0.2500], dtype=torch.float64), Delta+: [0.     0.0793], Delta-: [0.2945 0.    ], Delta: [-0.2945  0.0793], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0000, 0.9167], dtype=torch.float64), Delta+: [0.3305 0.    ], Delta-: [0.     0.5874], Delta: [ 0.3305 -0.5874], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.9167, 0.0417], dtype=torch.float64), Delta+: [0.     0.2876], Delta-: [0.5862 0.    ], Delta: [-0.5862  0.2876], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0417, 0.1250], dtype=torch.float64), Delta+: [0.2888 0.2043], Delta-: [0. 0.], Delta: [0.2888 0.2043], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.7500, 0.2083], dtype=torch.float64), Delta+: [0.    0.121], Delta-: [0.4195 0.    ], Delta: [-0.4195  0.121 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0417, 0.7500], dtype=torch.float64), Delta+: [0.2888 0.    ], Delta-: [0.     0.4207], Delta: [ 0.2888 -0.4207], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.3750, 0.0000], dtype=torch.float64), Delta+: [0.     0.3293], Delta-: [0.0445 0.    ], Delta: [-0.0445  0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.7500, 0.2500], dtype=torch.float64), Delta+: [0.     0.0793], Delta-: [0.4195 0.    ], Delta: [-0.4195  0.0793], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0417, 0.0000], dtype=torch.float64), Delta+: [0.2888 0.3293], Delta-: [0. 0.], Delta: [0.2888 0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.6667, 0.2083], dtype=torch.float64), Delta+: [0.    0.121], Delta-: [0.3362 0.    ], Delta: [-0.3362  0.121 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.6667, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.3362 0.004 ], Delta: [-0.3362 -0.004 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0417, 0.8333], dtype=torch.float64), Delta+: [0.2888 0.    ], Delta-: [0.    0.504], Delta: [ 0.2888 -0.504 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0833, 0.4167], dtype=torch.float64), Delta+: [0.2471 0.    ], Delta-: [0.     0.0874], Delta: [ 0.2471 -0.0874], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2917, 0.4583], dtype=torch.float64), Delta+: [0.0388 0.    ], Delta-: [0.    0.129], Delta: [ 0.0388 -0.129 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4167, 0.0417], dtype=torch.float64), Delta+: [0.     0.2876], Delta-: [0.0862 0.    ], Delta: [-0.0862  0.2876], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5000, 0.0417], dtype=torch.float64), Delta+: [0.     0.2876], Delta-: [0.1695 0.    ], Delta: [-0.1695  0.2876], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0833, 0.5000], dtype=torch.float64), Delta+: [0.2471 0.    ], Delta-: [0.     0.1707], Delta: [ 0.2471 -0.1707], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.8750, 0.0417], dtype=torch.float64), Delta+: [0.     0.2876], Delta-: [0.5445 0.    ], Delta: [-0.5445  0.2876], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.5833, 0.0833], dtype=torch.float64), Delta+: [0.    0.246], Delta-: [0.2529 0.    ], Delta: [-0.2529  0.246 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.6250, 0.0000], dtype=torch.float64), Delta+: [0.     0.3293], Delta-: [0.2945 0.    ], Delta: [-0.2945  0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1667, 0.5000], dtype=torch.float64), Delta+: [0.1638 0.    ], Delta-: [0.     0.1707], Delta: [ 0.1638 -0.1707], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.1250, 0.0000], dtype=torch.float64), Delta+: [0.2055 0.3293], Delta-: [0. 0.], Delta: [0.2055 0.3293], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0000, 0.8333], dtype=torch.float64), Delta+: [0.3305 0.    ], Delta-: [0.    0.504], Delta: [ 0.3305 -0.504 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0417, 0.1667], dtype=torch.float64), Delta+: [0.2888 0.1626], Delta-: [0. 0.], Delta: [0.2888 0.1626], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.2083, 0.7917], dtype=torch.float64), Delta+: [0.1221 0.    ], Delta-: [0.     0.4624], Delta: [ 0.1221 -0.4624], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.4167, 0.2083], dtype=torch.float64), Delta+: [0.    0.121], Delta-: [0.0862 0.    ], Delta: [-0.0862  0.121 ], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0000, 0.6667], dtype=torch.float64), Delta+: [0.3305 0.    ], Delta-: [0.     0.3374], Delta: [ 0.3305 -0.3374], Omega: [[0.3305 0.3293]], bt: 0.3395
Best solution found. Point: tensor([0.0000, 0.2917], dtype=torch.float64), Delta+: [0.3305 0.0376], Delta-: [0. 0.], Delta: [0.3305 0.0376], Omega: [[0.3305 0.3293]], bt: 0.3395
Failure Rate: 0.00%
Step 2e: Train GPR models for inside and outside NTR
train gp model_in done 
Early stopping at iteration 423
train gp model_out done
Time step 2
include consumption: False
Step 2a: Approximate NTR
starting point [0. 0.]
direction [-0.333 -0.333]
Center Point: [0.333 0.333], Edge Point: [0.2507 0.2507]
starting point [0. 1.]
direction [-0.333  0.667]
Center Point: [0.333 0.333], Edge Point: [0.2824 0.4343]
starting point [0.5 0.5]
direction [0.167 0.167]
Center Point: [0.333 0.333], Edge Point: [0.4093 0.4093]
Center of NTR: [0.333 0.333], Radius of NTR: 0.1163
Step 2b: Sample state points
Best solution found. Point: tensor([0.3884, 0.3140], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3884 0.314 ]], bt: 0.2976
Best solution found. Point: tensor([0.4073, 0.3699], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4073 0.3699]], bt: 0.2228
Best solution found. Point: tensor([0.3643, 0.2767], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3643 0.2767]], bt: 0.359
Best solution found. Point: tensor([0.4097, 0.3597], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4097 0.3597]], bt: 0.2306
Best solution found. Point: tensor([0.4376, 0.3651], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4376 0.3651]], bt: 0.1973
Best solution found. Point: tensor([0.3537, 0.2442], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3537 0.2442]], bt: 0.402
Best solution found. Point: tensor([0.2896, 0.4282], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2896 0.4282]], bt: 0.2822
Best solution found. Point: tensor([0.3350, 0.2722], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.335  0.2722]], bt: 0.3928
Best solution found. Point: tensor([0.3811, 0.2759], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3811 0.2759]], bt: 0.343
Best solution found. Point: tensor([0.3948, 0.2998], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3948 0.2998]], bt: 0.3054
Best solution found. Point: tensor([0.3923, 0.3385], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3923 0.3385]], bt: 0.2692
Best solution found. Point: tensor([0.2548, 0.2572], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2548 0.2572]], bt: 0.488
Best solution found. Point: tensor([0.3954, 0.3801], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3954 0.3801]], bt: 0.2245
Best solution found. Point: tensor([0.2736, 0.3987], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2736 0.3987]], bt: 0.3277
Best solution found. Point: tensor([0.4002, 0.3157], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4002 0.3157]], bt: 0.2841
Best solution found. Point: tensor([0.2771, 0.3486], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2771 0.3486]], bt: 0.3743
Best solution found. Point: tensor([0.2356, 0.3790], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2356 0.379 ]], bt: 0.3854
Best solution found. Point: tensor([0.3131, 0.3029], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3131 0.3029]], bt: 0.384
Best solution found. Point: tensor([0.2835, 0.3970], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2835 0.397 ]], bt: 0.3194
Best solution found. Point: tensor([0.3431, 0.3653], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3431 0.3653]], bt: 0.2916
Best solution found. Point: tensor([0.2792, 0.2955], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2792 0.2955]], bt: 0.4253
Best solution found. Point: tensor([0.4153, 0.3347], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4153 0.3347]], bt: 0.25
Best solution found. Point: tensor([0.3866, 0.3176], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3866 0.3176]], bt: 0.2959
Best solution found. Point: tensor([0.3733, 0.4068], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3733 0.4068]], bt: 0.2199
Best solution found. Point: tensor([0.2523, 0.3887], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2523 0.3887]], bt: 0.3589
Best solution found. Point: tensor([0.2677, 0.2708], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2677 0.2708]], bt: 0.4615
Best solution found. Point: tensor([0.3877, 0.3613], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3877 0.3613]], bt: 0.251
Best solution found. Point: tensor([0.2692, 0.4085], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2692 0.4085]], bt: 0.3222
Best solution found. Point: tensor([0.3385, 0.3723], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3385 0.3723]], bt: 0.2893
Best solution found. Point: tensor([0.2810, 0.3295], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.281  0.3295]], bt: 0.3894
Best solution found. Point: tensor([0.2240, 0.3055], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.224  0.3055]], bt: 0.4705
Best solution found. Point: tensor([0.2636, 0.4113], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2636 0.4113]], bt: 0.3251
Best solution found. Point: tensor([0.3666, 0.3168], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3666 0.3168]], bt: 0.3166
Best solution found. Point: tensor([0.3568, 0.3158], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3568 0.3158]], bt: 0.3274
Best solution found. Point: tensor([0.3388, 0.3508], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3388 0.3508]], bt: 0.3105
Best solution found. Point: tensor([0.2177, 0.3335], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2177 0.3335]], bt: 0.4488
Best solution found. Point: tensor([0.3431, 0.4368], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3431 0.4368]], bt: 0.22
Best solution found. Point: tensor([0.4531, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1245 0.0042], Delta: [-0.1245 -0.0042], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4513, 0.3545], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1227 0.0254], Delta: [-0.1227 -0.0254], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4470, 0.3725], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1184 0.0433], Delta: [-0.1184 -0.0433], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4368, 0.3886], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1082 0.0595], Delta: [-0.1082 -0.0595], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4128, 0.4251], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0842 0.096 ], Delta: [-0.0842 -0.096 ], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3949, 0.4337], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0663 0.1045], Delta: [-0.0663 -0.1045], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4234, 0.4087], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0947 0.0796], Delta: [-0.0947 -0.0796], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3800, 0.4439], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0514 0.1147], Delta: [-0.0514 -0.1147], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3369, 0.4528], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0083 0.1237], Delta: [-0.0083 -0.1237], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3595, 0.4511], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0309 0.122 ], Delta: [-0.0309 -0.122 ], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3160, 0.4533], dtype=torch.float64), Delta+: [0.0126 0.    ], Delta-: [0.     0.1242], Delta: [ 0.0126 -0.1242], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3006, 0.4461], dtype=torch.float64), Delta+: [0.028 0.   ], Delta-: [0.    0.117], Delta: [ 0.028 -0.117], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2806, 0.4384], dtype=torch.float64), Delta+: [0.048 0.   ], Delta-: [0.     0.1093], Delta: [ 0.048  -0.1093], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2613, 0.4300], dtype=torch.float64), Delta+: [0.0673 0.    ], Delta-: [0.     0.1009], Delta: [ 0.0673 -0.1009], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2456, 0.4181], dtype=torch.float64), Delta+: [0.083 0.   ], Delta-: [0.    0.089], Delta: [ 0.083 -0.089], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2222, 0.3811], dtype=torch.float64), Delta+: [0.1064 0.    ], Delta-: [0.    0.052], Delta: [ 0.1064 -0.052 ], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2357, 0.4007], dtype=torch.float64), Delta+: [0.0929 0.    ], Delta-: [0.     0.0715], Delta: [ 0.0929 -0.0715], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2135, 0.3410], dtype=torch.float64), Delta+: [0.1152 0.    ], Delta-: [0.     0.0118], Delta: [ 0.1152 -0.0118], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2168, 0.3640], dtype=torch.float64), Delta+: [0.1119 0.    ], Delta-: [0.     0.0349], Delta: [ 0.1119 -0.0349], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2156, 0.3239], dtype=torch.float64), Delta+: [0.113  0.0052], Delta-: [0. 0.], Delta: [0.113  0.0052], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2182, 0.3034], dtype=torch.float64), Delta+: [0.1104 0.0258], Delta-: [0. 0.], Delta: [0.1104 0.0258], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2349, 0.2661], dtype=torch.float64), Delta+: [0.0937 0.063 ], Delta-: [0. 0.], Delta: [0.0937 0.063 ], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2467, 0.2529], dtype=torch.float64), Delta+: [0.0819 0.0762], Delta-: [0. 0.], Delta: [0.0819 0.0762], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2253, 0.2842], dtype=torch.float64), Delta+: [0.1033 0.045 ], Delta-: [0. 0.], Delta: [0.1033 0.045 ], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2623, 0.2378], dtype=torch.float64), Delta+: [0.0663 0.0913], Delta-: [0. 0.], Delta: [0.0663 0.0913], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2795, 0.2235], dtype=torch.float64), Delta+: [0.0491 0.1056], Delta-: [0. 0.], Delta: [0.0491 0.1056], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3202, 0.2151], dtype=torch.float64), Delta+: [0.0085 0.1141], Delta-: [0. 0.], Delta: [0.0085 0.1141], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3391, 0.2138], dtype=torch.float64), Delta+: [0.     0.1154], Delta-: [0.0104 0.    ], Delta: [-0.0104  0.1154], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3574, 0.2174], dtype=torch.float64), Delta+: [0.     0.1117], Delta-: [0.0288 0.    ], Delta: [-0.0288  0.1117], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3766, 0.2199], dtype=torch.float64), Delta+: [0.     0.1092], Delta-: [0.048 0.   ], Delta: [-0.048   0.1092], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3980, 0.2312], dtype=torch.float64), Delta+: [0.     0.0979], Delta-: [0.0694 0.    ], Delta: [-0.0694  0.0979], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4107, 0.2428], dtype=torch.float64), Delta+: [0.     0.0864], Delta-: [0.0821 0.    ], Delta: [-0.0821  0.0864], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4247, 0.2572], dtype=torch.float64), Delta+: [0.     0.0719], Delta-: [0.0961 0.    ], Delta: [-0.0961  0.0719], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4354, 0.2738], dtype=torch.float64), Delta+: [0.     0.0553], Delta-: [0.1068 0.    ], Delta: [-0.1068  0.0553], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4447, 0.2954], dtype=torch.float64), Delta+: [0.     0.0338], Delta-: [0.1161 0.    ], Delta: [-0.1161  0.0338], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4519, 0.3111], dtype=torch.float64), Delta+: [0.    0.018], Delta-: [0.1233 0.    ], Delta: [-0.1233  0.018 ], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2994, 0.2174], dtype=torch.float64), Delta+: [0.0292 0.1118], Delta-: [0. 0.], Delta: [0.0292 0.1118], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.7917], dtype=torch.float64), Delta+: [0.1619 0.    ], Delta-: [0.     0.4625], Delta: [ 0.1619 -0.4625], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2917, 0.5833], dtype=torch.float64), Delta+: [0.0369 0.    ], Delta-: [0.     0.2542], Delta: [ 0.0369 -0.2542], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.6250, 0.0417], dtype=torch.float64), Delta+: [0.     0.2875], Delta-: [0.2964 0.    ], Delta: [-0.2964  0.2875], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.5417, 0.2917], dtype=torch.float64), Delta+: [0.     0.0375], Delta-: [0.2131 0.    ], Delta: [-0.2131  0.0375], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.7917, 0.2083], dtype=torch.float64), Delta+: [0.     0.1208], Delta-: [0.4631 0.    ], Delta: [-0.4631  0.1208], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3333, 0.1250], dtype=torch.float64), Delta+: [0.     0.2041], Delta-: [0.0047 0.    ], Delta: [-0.0047  0.2041], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1250, 0.5000], dtype=torch.float64), Delta+: [0.2036 0.    ], Delta-: [0.     0.1709], Delta: [ 0.2036 -0.1709], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0417, 0.4167], dtype=torch.float64), Delta+: [0.2869 0.    ], Delta-: [0.     0.0875], Delta: [ 0.2869 -0.0875], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.7917, 0.1667], dtype=torch.float64), Delta+: [0.     0.2177], Delta-: [0.5073 0.    ], Delta: [-0.5073  0.2177], Omega: [[0.2844 0.3844]], bt: 0.3304
Best solution found. Point: tensor([0.2500, 0.1250], dtype=torch.float64), Delta+: [0.0786 0.2041], Delta-: [0. 0.], Delta: [0.0786 0.2041], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3333, 0.6667], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0047 0.3375], Delta: [-0.0047 -0.3375], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([1., 0.], dtype=torch.float64), Delta+: [0.     0.3291], Delta-: [0.6714 0.    ], Delta: [-0.6714  0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.3750, 0.5417], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0464 0.2125], Delta: [-0.0464 -0.2125], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0417, 0.1667], dtype=torch.float64), Delta+: [0.2869 0.1625], Delta-: [0. 0.], Delta: [0.2869 0.1625], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.7917, 0.0833], dtype=torch.float64), Delta+: [0.     0.3011], Delta-: [0.5073 0.    ], Delta: [-0.5073  0.3011], Omega: [[0.2844 0.3844]], bt: 0.3304
Best solution found. Point: tensor([0.0833, 0.8333], dtype=torch.float64), Delta+: [0.2453 0.    ], Delta-: [0.     0.5042], Delta: [ 0.2453 -0.5042], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2500, 0.5833], dtype=torch.float64), Delta+: [0.0786 0.    ], Delta-: [0.     0.2542], Delta: [ 0.0786 -0.2542], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.9167, 0.0833], dtype=torch.float64), Delta+: [0.     0.2458], Delta-: [0.5881 0.    ], Delta: [-0.5881  0.2458], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2500, 0.0000], dtype=torch.float64), Delta+: [0.0786 0.3291], Delta-: [0. 0.], Delta: [0.0786 0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.6667, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.3381 0.0042], Delta: [-0.3381 -0.0042], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2500, 0.0417], dtype=torch.float64), Delta+: [0.0786 0.2875], Delta-: [0. 0.], Delta: [0.0786 0.2875], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.5000, 0.2917], dtype=torch.float64), Delta+: [0.     0.0375], Delta-: [0.1714 0.    ], Delta: [-0.1714  0.0375], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.1250], dtype=torch.float64), Delta+: [0.1619 0.2041], Delta-: [0. 0.], Delta: [0.1619 0.2041], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2083, 0.3333], dtype=torch.float64), Delta+: [0.1203 0.    ], Delta-: [0.     0.0042], Delta: [ 0.1203 -0.0042], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.5000, 0.5000], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1714 0.1709], Delta: [-0.1714 -0.1709], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0000, 0.9167], dtype=torch.float64), Delta+: [0.3286 0.    ], Delta-: [0.     0.5875], Delta: [ 0.3286 -0.5875], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0000, 0.7500], dtype=torch.float64), Delta+: [0.3286 0.    ], Delta-: [0.     0.4209], Delta: [ 0.3286 -0.4209], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.6667], dtype=torch.float64), Delta+: [0.1619 0.    ], Delta-: [0.     0.3375], Delta: [ 0.1619 -0.3375], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0833, 0.3750], dtype=torch.float64), Delta+: [0.2453 0.    ], Delta-: [0.     0.0459], Delta: [ 0.2453 -0.0459], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1250, 0.0000], dtype=torch.float64), Delta+: [0.2036 0.3291], Delta-: [0. 0.], Delta: [0.2036 0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2083, 0.1250], dtype=torch.float64), Delta+: [0.1203 0.2041], Delta-: [0. 0.], Delta: [0.1203 0.2041], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4167, 0.4583], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0881 0.1292], Delta: [-0.0881 -0.1292], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4167, 0.1250], dtype=torch.float64), Delta+: [0.     0.2041], Delta-: [0.0881 0.    ], Delta: [-0.0881  0.2041], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2917, 0.2083], dtype=torch.float64), Delta+: [0.0369 0.1208], Delta-: [0. 0.], Delta: [0.0369 0.1208], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0833, 0.0000], dtype=torch.float64), Delta+: [0.2453 0.3291], Delta-: [0. 0.], Delta: [0.2453 0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.5000, 0.3750], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1714 0.0459], Delta: [-0.1714 -0.0459], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0417, 0.9167], dtype=torch.float64), Delta+: [0.2869 0.    ], Delta-: [0.     0.5875], Delta: [ 0.2869 -0.5875], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0833, 0.7917], dtype=torch.float64), Delta+: [0.2453 0.    ], Delta-: [0.     0.4625], Delta: [ 0.2453 -0.4625], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.3750], dtype=torch.float64), Delta+: [0.1619 0.    ], Delta-: [0.     0.0459], Delta: [ 0.1619 -0.0459], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.5000, 0.1250], dtype=torch.float64), Delta+: [0.     0.2041], Delta-: [0.1714 0.    ], Delta: [-0.1714  0.2041], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.4583], dtype=torch.float64), Delta+: [0.1619 0.    ], Delta-: [0.     0.1292], Delta: [ 0.1619 -0.1292], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1250, 0.2500], dtype=torch.float64), Delta+: [0.2036 0.0791], Delta-: [0. 0.], Delta: [0.2036 0.0791], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0417, 0.3333], dtype=torch.float64), Delta+: [0.2869 0.    ], Delta-: [0.     0.0042], Delta: [ 0.2869 -0.0042], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.5000], dtype=torch.float64), Delta+: [0.1619 0.    ], Delta-: [0.     0.1709], Delta: [ 0.1619 -0.1709], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.7083, 0.1250], dtype=torch.float64), Delta+: [0.     0.2041], Delta-: [0.3797 0.    ], Delta: [-0.3797  0.2041], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4167, 0.0833], dtype=torch.float64), Delta+: [0.     0.2458], Delta-: [0.0881 0.    ], Delta: [-0.0881  0.2458], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.5833], dtype=torch.float64), Delta+: [0.1619 0.    ], Delta-: [0.     0.2542], Delta: [ 0.1619 -0.2542], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0833, 0.6250], dtype=torch.float64), Delta+: [0.2453 0.    ], Delta-: [0.     0.2959], Delta: [ 0.2453 -0.2959], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1250, 0.0417], dtype=torch.float64), Delta+: [0.2036 0.2875], Delta-: [0. 0.], Delta: [0.2036 0.2875], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0833, 0.8750], dtype=torch.float64), Delta+: [0.2453 0.    ], Delta-: [0.     0.5459], Delta: [ 0.2453 -0.5459], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2500, 0.6667], dtype=torch.float64), Delta+: [0.0786 0.    ], Delta-: [0.     0.3375], Delta: [ 0.0786 -0.3375], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0417, 0.2083], dtype=torch.float64), Delta+: [0.2869 0.1208], Delta-: [0. 0.], Delta: [0.2869 0.1208], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.6667, 0.2500], dtype=torch.float64), Delta+: [0.     0.0791], Delta-: [0.3381 0.    ], Delta: [-0.3381  0.0791], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0833, 0.2500], dtype=torch.float64), Delta+: [0.2453 0.0791], Delta-: [0. 0.], Delta: [0.2453 0.0791], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4167, 0.0000], dtype=torch.float64), Delta+: [0.     0.3291], Delta-: [0.0881 0.    ], Delta: [-0.0881  0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.1667, 0.0833], dtype=torch.float64), Delta+: [0.1619 0.2458], Delta-: [0. 0.], Delta: [0.1619 0.2458], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.7083, 0.1667], dtype=torch.float64), Delta+: [0.     0.1625], Delta-: [0.3797 0.    ], Delta: [-0.3797  0.1625], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4167, 0.2083], dtype=torch.float64), Delta+: [0.     0.1208], Delta-: [0.0881 0.    ], Delta: [-0.0881  0.1208], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.4583, 0.0833], dtype=torch.float64), Delta+: [0.     0.2458], Delta-: [0.1297 0.    ], Delta: [-0.1297  0.2458], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0833, 0.2917], dtype=torch.float64), Delta+: [0.2453 0.0375], Delta-: [0. 0.], Delta: [0.2453 0.0375], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0417, 0.6250], dtype=torch.float64), Delta+: [0.2869 0.    ], Delta-: [0.     0.2959], Delta: [ 0.2869 -0.2959], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0000, 0.6667], dtype=torch.float64), Delta+: [0.3286 0.    ], Delta-: [0.     0.3375], Delta: [ 0.3286 -0.3375], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2500, 0.6250], dtype=torch.float64), Delta+: [0.0786 0.    ], Delta-: [0.     0.2959], Delta: [ 0.0786 -0.2959], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.5833, 0.0833], dtype=torch.float64), Delta+: [0.     0.2458], Delta-: [0.2547 0.    ], Delta: [-0.2547  0.2458], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2083, 0.5417], dtype=torch.float64), Delta+: [0.1203 0.    ], Delta-: [0.     0.2125], Delta: [ 0.1203 -0.2125], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.8333, 0.1667], dtype=torch.float64), Delta+: [0.     0.1625], Delta-: [0.5047 0.    ], Delta: [-0.5047  0.1625], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.6250, 0.3750], dtype=torch.float64), Delta+: [0. 0.], Delta-: [ 0.3418 -0.    ], Delta: [-0.3418  0.    ], Omega: [[0.2832 0.375 ]], bt: 0.341
Best solution found. Point: tensor([0.3750, 0.0833], dtype=torch.float64), Delta+: [0.     0.2458], Delta-: [0.0464 0.    ], Delta: [-0.0464  0.2458], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.7917, 0.0000], dtype=torch.float64), Delta+: [0.     0.3291], Delta-: [0.4631 0.    ], Delta: [-0.4631  0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.9167, 0.0000], dtype=torch.float64), Delta+: [0.     0.3291], Delta-: [0.5881 0.    ], Delta: [-0.5881  0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.8750, 0.0833], dtype=torch.float64), Delta+: [0.     0.2458], Delta-: [0.5464 0.    ], Delta: [-0.5464  0.2458], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.0417, 0.4583], dtype=torch.float64), Delta+: [0.2869 0.    ], Delta-: [0.     0.1292], Delta: [ 0.2869 -0.1292], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.8333, 0.0000], dtype=torch.float64), Delta+: [0.     0.3291], Delta-: [0.5047 0.    ], Delta: [-0.5047  0.3291], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.2500, 0.1667], dtype=torch.float64), Delta+: [0.0786 0.1625], Delta-: [0. 0.], Delta: [0.0786 0.1625], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0.7917, 0.0417], dtype=torch.float64), Delta+: [0.     0.2875], Delta-: [0.4631 0.    ], Delta: [-0.4631  0.2875], Omega: [[0.3286 0.3291]], bt: 0.3415
Best solution found. Point: tensor([0., 1.], dtype=torch.float64), Delta+: [0.3286 0.    ], Delta-: [0.     0.6709], Delta: [ 0.3286 -0.6709], Omega: [[0.3286 0.3291]], bt: 0.3415
Failure Rate: 0.00%
Step 2e: Train GPR models for inside and outside NTR
train gp model_in done 
Early stopping at iteration 1114
train gp model_out done
Time step 1
include consumption: False
Step 2a: Approximate NTR
starting point [0. 0.]
direction [-0.333 -0.333]
Center Point: [0.333 0.333], Edge Point: [0.2508 0.2508]
starting point [0. 1.]
direction [-0.333  0.667]
Center Point: [0.333 0.333], Edge Point: [0.2824 0.4342]
starting point [0.5 0.5]
direction [0.167 0.167]
Center Point: [0.333 0.333], Edge Point: [0.4087 0.4087]
Center of NTR: [0.333 0.333], Radius of NTR: 0.1162
Step 2b: Sample state points
Best solution found. Point: tensor([0.3240, 0.3818], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.324  0.3818]], bt: 0.2942
Best solution found. Point: tensor([0.2450, 0.2841], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.245  0.2841]], bt: 0.4708
Best solution found. Point: tensor([0.3502, 0.3895], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3502 0.3895]], bt: 0.2603
Best solution found. Point: tensor([0.3762, 0.2879], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3762 0.2879]], bt: 0.3359
Best solution found. Point: tensor([0.3122, 0.4161], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3122 0.4161]], bt: 0.2716
Best solution found. Point: tensor([0.4265, 0.3373], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4265 0.3373]], bt: 0.2362
Best solution found. Point: tensor([0.3427, 0.3293], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3427 0.3293]], bt: 0.328
Best solution found. Point: tensor([0.3401, 0.2419], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3401 0.2419]], bt: 0.418
Best solution found. Point: tensor([0.3405, 0.3763], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3405 0.3763]], bt: 0.2832
Best solution found. Point: tensor([0.4070, 0.2551], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.407  0.2551]], bt: 0.3379
Best solution found. Point: tensor([0.4354, 0.3274], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4354 0.3274]], bt: 0.2372
Best solution found. Point: tensor([0.2862, 0.3582], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2862 0.3582]], bt: 0.3556
Best solution found. Point: tensor([0.4346, 0.3650], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4346 0.365 ]], bt: 0.2005
Best solution found. Point: tensor([0.4143, 0.2513], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4143 0.2513]], bt: 0.3344
Best solution found. Point: tensor([0.2426, 0.3306], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2426 0.3306]], bt: 0.4268
Best solution found. Point: tensor([0.2692, 0.2936], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2692 0.2936]], bt: 0.4372
Best solution found. Point: tensor([0.3482, 0.2336], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3482 0.2336]], bt: 0.4181
Best solution found. Point: tensor([0.3772, 0.2871], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3772 0.2871]], bt: 0.3357
Best solution found. Point: tensor([0.3115, 0.2356], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3115 0.2356]], bt: 0.453
Best solution found. Point: tensor([0.3749, 0.2616], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3749 0.2616]], bt: 0.3635
Best solution found. Point: tensor([0.3843, 0.3513], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3843 0.3513]], bt: 0.2644
Best solution found. Point: tensor([0.2661, 0.2566], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2661 0.2566]], bt: 0.4773
Best solution found. Point: tensor([0.3442, 0.4017], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3442 0.4017]], bt: 0.2542
Best solution found. Point: tensor([0.3144, 0.3741], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3144 0.3741]], bt: 0.3115
Best solution found. Point: tensor([0.3168, 0.3018], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3168 0.3018]], bt: 0.3815
Best solution found. Point: tensor([0.4012, 0.2692], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4012 0.2692]], bt: 0.3296
Best solution found. Point: tensor([0.2178, 0.3317], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2178 0.3317]], bt: 0.4505
Best solution found. Point: tensor([0.3524, 0.4423], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3524 0.4423]], bt: 0.2052
Best solution found. Point: tensor([0.4256, 0.3947], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4256 0.3947]], bt: 0.1798
Best solution found. Point: tensor([0.3011, 0.4429], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3011 0.4429]], bt: 0.256
Best solution found. Point: tensor([0.2584, 0.3185], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2584 0.3185]], bt: 0.4231
Best solution found. Point: tensor([0.2715, 0.2993], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2715 0.2993]], bt: 0.4292
Best solution found. Point: tensor([0.3878, 0.3966], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3878 0.3966]], bt: 0.2156
Best solution found. Point: tensor([0.3356, 0.3285], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3356 0.3285]], bt: 0.3358
Best solution found. Point: tensor([0.3817, 0.2450], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3817 0.245 ]], bt: 0.3733
Best solution found. Point: tensor([0.3903, 0.2630], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3903 0.263 ]], bt: 0.3467
Best solution found. Point: tensor([0.2836, 0.3689], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2836 0.3689]], bt: 0.3475
Best solution found. Point: tensor([0.4507, 0.3515], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1229 0.0184], Delta: [-0.1229 -0.0184], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4449, 0.3732], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1171 0.0401], Delta: [-0.1171 -0.0401], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4356, 0.3925], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1078 0.0594], Delta: [-0.1078 -0.0594], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4527, 0.3327], dtype=torch.float64), Delta+: [0.     0.0004], Delta-: [0.1248 0.    ], Delta: [-0.1248  0.0004], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4132, 0.4215], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0854 0.0884], Delta: [-0.0854 -0.0884], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3959, 0.4362], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0681 0.1031], Delta: [-0.0681 -0.1031], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4257, 0.4072], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0979 0.0741], Delta: [-0.0979 -0.0741], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3784, 0.4450], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0506 0.1119], Delta: [-0.0506 -0.1119], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3568, 0.4496], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.029  0.1165], Delta: [-0.029  -0.1165], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3382, 0.4534], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0104 0.1203], Delta: [-0.0104 -0.1203], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3177, 0.4526], dtype=torch.float64), Delta+: [0.0101 0.    ], Delta-: [0.     0.1195], Delta: [ 0.0101 -0.1195], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2786, 0.4372], dtype=torch.float64), Delta+: [0.0492 0.    ], Delta-: [0.     0.1041], Delta: [ 0.0492 -0.1041], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2976, 0.4457], dtype=torch.float64), Delta+: [0.0302 0.    ], Delta-: [0.     0.1126], Delta: [ 0.0302 -0.1126], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2626, 0.4278], dtype=torch.float64), Delta+: [0.0652 0.    ], Delta-: [0.     0.0947], Delta: [ 0.0652 -0.0947], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2481, 0.4157], dtype=torch.float64), Delta+: [0.0797 0.    ], Delta-: [0.     0.0826], Delta: [ 0.0797 -0.0826], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2317, 0.4005], dtype=torch.float64), Delta+: [0.0961 0.    ], Delta-: [0.     0.0674], Delta: [ 0.0961 -0.0674], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2246, 0.3796], dtype=torch.float64), Delta+: [0.1032 0.    ], Delta-: [0.     0.0465], Delta: [ 0.1032 -0.0465], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2174, 0.3632], dtype=torch.float64), Delta+: [0.1104 0.    ], Delta-: [0.     0.0301], Delta: [ 0.1104 -0.0301], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2126, 0.3431], dtype=torch.float64), Delta+: [0.1153 0.    ], Delta-: [0.   0.01], Delta: [ 0.1153 -0.01  ], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2186, 0.3045], dtype=torch.float64), Delta+: [ 0.1755 -0.    ], Delta-: [0. 0.], Delta: [ 0.1755 -0.    ], Omega: [[0.3941 0.3045]], bt: 0.3006
Best solution found. Point: tensor([0.2160, 0.3222], dtype=torch.float64), Delta+: [0.1118 0.0108], Delta-: [0. 0.], Delta: [0.1118 0.0108], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2316, 0.2669], dtype=torch.float64), Delta+: [0.0962 0.0662], Delta-: [0. 0.], Delta: [0.0962 0.0662], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2447, 0.2501], dtype=torch.float64), Delta+: [0.123  0.0428], Delta-: [0. 0.], Delta: [0.123  0.0428], Omega: [[0.3676 0.2929]], bt: 0.3387
Best solution found. Point: tensor([0.2613, 0.2387], dtype=torch.float64), Delta+: [0.0665 0.0944], Delta-: [0. 0.], Delta: [0.0665 0.0944], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2796, 0.2235], dtype=torch.float64), Delta+: [0.0482 0.1096], Delta-: [0. 0.], Delta: [0.0482 0.1096], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2961, 0.2170], dtype=torch.float64), Delta+: [0.0317 0.1161], Delta-: [0. 0.], Delta: [0.0317 0.1161], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3191, 0.2160], dtype=torch.float64), Delta+: [0.0087 0.1171], Delta-: [0. 0.], Delta: [0.0087 0.1171], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3366, 0.2119], dtype=torch.float64), Delta+: [0.     0.1212], Delta-: [0.0087 0.    ], Delta: [-0.0087  0.1212], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3584, 0.2150], dtype=torch.float64), Delta+: [0.     0.1181], Delta-: [0.0306 0.    ], Delta: [-0.0306  0.1181], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3793, 0.2205], dtype=torch.float64), Delta+: [0.     0.1126], Delta-: [0.0515 0.    ], Delta: [-0.0515  0.1126], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3968, 0.2320], dtype=torch.float64), Delta+: [0.     0.1011], Delta-: [0.0689 0.    ], Delta: [-0.0689  0.1011], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4141, 0.2435], dtype=torch.float64), Delta+: [0.     0.0896], Delta-: [0.0863 0.    ], Delta: [-0.0863  0.0896], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4272, 0.2558], dtype=torch.float64), Delta+: [0.     0.0773], Delta-: [0.0994 0.    ], Delta: [-0.0994  0.0773], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4385, 0.2721], dtype=torch.float64), Delta+: [0.    0.061], Delta-: [0.1107 0.    ], Delta: [-0.1107  0.061 ], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4466, 0.2938], dtype=torch.float64), Delta+: [0.     0.0393], Delta-: [0.1188 0.    ], Delta: [-0.1188  0.0393], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4496, 0.3121], dtype=torch.float64), Delta+: [0.    0.021], Delta-: [0.1218 0.    ], Delta: [-0.1218  0.021 ], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0833, 0.5833], dtype=torch.float64), Delta+: [0.2445 0.    ], Delta-: [0.     0.2502], Delta: [ 0.2445 -0.2502], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.9583, 0.0000], dtype=torch.float64), Delta+: [0.     0.3331], Delta-: [0.6305 0.    ], Delta: [-0.6305  0.3331], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2500, 0.1250], dtype=torch.float64), Delta+: [0.0778 0.2081], Delta-: [0. 0.], Delta: [0.0778 0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.6250, 0.1667], dtype=torch.float64), Delta+: [0.     0.1664], Delta-: [0.2972 0.    ], Delta: [-0.2972  0.1664], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2917, 0.6250], dtype=torch.float64), Delta+: [0.076 0.   ], Delta-: [0.     0.3321], Delta: [ 0.076  -0.3321], Omega: [[0.3676 0.2929]], bt: 0.3387
Best solution found. Point: tensor([0.5417, 0.2917], dtype=torch.float64), Delta+: [0.     0.0414], Delta-: [0.2139 0.    ], Delta: [-0.2139  0.0414], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.6250, 0.0000], dtype=torch.float64), Delta+: [0.     0.3331], Delta-: [0.2972 0.    ], Delta: [-0.2972  0.3331], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0000, 0.9583], dtype=torch.float64), Delta+: [0.3278 0.    ], Delta-: [0.     0.6252], Delta: [ 0.3278 -0.6252], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2083, 0.7500], dtype=torch.float64), Delta+: [0.1195 0.    ], Delta-: [0.     0.4169], Delta: [ 0.1195 -0.4169], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4167, 0.0833], dtype=torch.float64), Delta+: [0.     0.2498], Delta-: [0.0889 0.    ], Delta: [-0.0889  0.2498], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3333, 0.5417], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0055 0.2086], Delta: [-0.0055 -0.2086], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.9583, 0.0417], dtype=torch.float64), Delta+: [0.     0.2914], Delta-: [0.6305 0.    ], Delta: [-0.6305  0.2914], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0000, 0.1667], dtype=torch.float64), Delta+: [0.3278 0.1664], Delta-: [0. 0.], Delta: [0.3278 0.1664], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5417, 0.0833], dtype=torch.float64), Delta+: [0.     0.2498], Delta-: [0.2139 0.    ], Delta: [-0.2139  0.2498], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.2917], dtype=torch.float64), Delta+: [0.2426 0.0012], Delta-: [0. 0.], Delta: [0.2426 0.0012], Omega: [[0.3676 0.2929]], bt: 0.3387
Best solution found. Point: tensor([0.2083, 0.2083], dtype=torch.float64), Delta+: [0.1195 0.1248], Delta-: [0. 0.], Delta: [0.1195 0.1248], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.0000], dtype=torch.float64), Delta+: [0.2028 0.3331], Delta-: [0. 0.], Delta: [0.2028 0.3331], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.1250], dtype=torch.float64), Delta+: [0.2028 0.2081], Delta-: [0. 0.], Delta: [0.2028 0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3333, 0.4583], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0055 0.1252], Delta: [-0.0055 -0.1252], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4167, 0.1667], dtype=torch.float64), Delta+: [0.     0.1664], Delta-: [0.0889 0.    ], Delta: [-0.0889  0.1664], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2500, 0.4167], dtype=torch.float64), Delta+: [0.0778 0.    ], Delta-: [0.     0.0836], Delta: [ 0.0778 -0.0836], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.8333, 0.0417], dtype=torch.float64), Delta+: [0.     0.2914], Delta-: [0.5055 0.    ], Delta: [-0.5055  0.2914], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1667, 0.6250], dtype=torch.float64), Delta+: [0.1611 0.    ], Delta-: [0.     0.2919], Delta: [ 0.1611 -0.2919], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0833, 0.6667], dtype=torch.float64), Delta+: [0.2445 0.    ], Delta-: [0.     0.3336], Delta: [ 0.2445 -0.3336], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4583, 0.0000], dtype=torch.float64), Delta+: [0.     0.3331], Delta-: [0.1305 0.    ], Delta: [-0.1305  0.3331], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0833, 0.5000], dtype=torch.float64), Delta+: [0.2445 0.    ], Delta-: [0.     0.1669], Delta: [ 0.2445 -0.1669], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.3333, 0.5833], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0055 0.2502], Delta: [-0.0055 -0.2502], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.6667, 0.1250], dtype=torch.float64), Delta+: [0.     0.2081], Delta-: [0.3389 0.    ], Delta: [-0.3389  0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2500, 0.2083], dtype=torch.float64), Delta+: [0.0778 0.1248], Delta-: [0. 0.], Delta: [0.0778 0.1248], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0833, 0.4583], dtype=torch.float64), Delta+: [0.2445 0.    ], Delta-: [0.     0.1252], Delta: [ 0.2445 -0.1252], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4167, 0.4167], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0889 0.0836], Delta: [-0.0889 -0.0836], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5833, 0.0000], dtype=torch.float64), Delta+: [0.     0.3331], Delta-: [0.2555 0.    ], Delta: [-0.2555  0.3331], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.6250, 0.2500], dtype=torch.float64), Delta+: [0.     0.0831], Delta-: [0.2972 0.    ], Delta: [-0.2972  0.0831], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1667, 0.0417], dtype=torch.float64), Delta+: [0.201  0.2512], Delta-: [0. 0.], Delta: [0.201  0.2512], Omega: [[0.3676 0.2929]], bt: 0.3387
Best solution found. Point: tensor([0.1667, 0.0833], dtype=torch.float64), Delta+: [0.1611 0.2498], Delta-: [0. 0.], Delta: [0.1611 0.2498], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0417, 0.5833], dtype=torch.float64), Delta+: [0.2861 0.    ], Delta-: [0.     0.2502], Delta: [ 0.2861 -0.2502], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2917, 0.1667], dtype=torch.float64), Delta+: [0.0361 0.1664], Delta-: [0. 0.], Delta: [0.0361 0.1664], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2237, 0.2858], dtype=torch.float64), Delta+: [0.1439 0.0071], Delta-: [0. 0.], Delta: [0.1439 0.0071], Omega: [[0.3676 0.2929]], bt: 0.3387
Best solution found. Point: tensor([0.6667, 0.1667], dtype=torch.float64), Delta+: [0.     0.1262], Delta-: [0.299 0.   ], Delta: [-0.299   0.1262], Omega: [[0.3676 0.2929]], bt: 0.3387
Best solution found. Point: tensor([0.4583, 0.2917], dtype=torch.float64), Delta+: [0.     0.0414], Delta-: [0.1305 0.    ], Delta: [-0.1305  0.0414], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.0833], dtype=torch.float64), Delta+: [0.2028 0.2498], Delta-: [0. 0.], Delta: [0.2028 0.2498], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.7500, 0.1250], dtype=torch.float64), Delta+: [0.     0.2081], Delta-: [0.4222 0.    ], Delta: [-0.4222  0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.5000], dtype=torch.float64), Delta+: [0.2028 0.    ], Delta-: [0.     0.1669], Delta: [ 0.2028 -0.1669], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5833, 0.1250], dtype=torch.float64), Delta+: [0.     0.2081], Delta-: [0.2555 0.    ], Delta: [-0.2555  0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0000, 0.1250], dtype=torch.float64), Delta+: [0.3278 0.2081], Delta-: [0. 0.], Delta: [0.3278 0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5833, 0.2917], dtype=torch.float64), Delta+: [0.     0.0414], Delta-: [0.2555 0.    ], Delta: [-0.2555  0.0414], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1667, 0.4583], dtype=torch.float64), Delta+: [0.1611 0.    ], Delta-: [0.     0.1252], Delta: [ 0.1611 -0.1252], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2500, 0.4583], dtype=torch.float64), Delta+: [0.0778 0.    ], Delta-: [0.     0.1252], Delta: [ 0.0778 -0.1252], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0833, 0.6250], dtype=torch.float64), Delta+: [0.2445 0.    ], Delta-: [0.     0.2919], Delta: [ 0.2445 -0.2919], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5000, 0.5000], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1722 0.1669], Delta: [-0.1722 -0.1669], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1667, 0.2500], dtype=torch.float64), Delta+: [0.201  0.0429], Delta-: [0. 0.], Delta: [0.201  0.0429], Omega: [[0.3676 0.2929]], bt: 0.3387
Best solution found. Point: tensor([0.0000, 0.4583], dtype=torch.float64), Delta+: [0.3278 0.    ], Delta-: [0.     0.1252], Delta: [ 0.3278 -0.1252], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2083, 0.2500], dtype=torch.float64), Delta+: [0.1195 0.0831], Delta-: [0. 0.], Delta: [0.1195 0.0831], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.7917, 0.1250], dtype=torch.float64), Delta+: [0.     0.2081], Delta-: [0.4639 0.    ], Delta: [-0.4639  0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4167, 0.1250], dtype=torch.float64), Delta+: [0.     0.2081], Delta-: [0.0889 0.    ], Delta: [-0.0889  0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0000, 0.5417], dtype=torch.float64), Delta+: [0.3278 0.    ], Delta-: [0.     0.2086], Delta: [ 0.3278 -0.2086], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.2083], dtype=torch.float64), Delta+: [0.2028 0.1248], Delta-: [0. 0.], Delta: [0.2028 0.1248], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2500, 0.0417], dtype=torch.float64), Delta+: [0.0778 0.2914], Delta-: [0. 0.], Delta: [0.0778 0.2914], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.8333, 0.0000], dtype=torch.float64), Delta+: [0.     0.3331], Delta-: [0.5055 0.    ], Delta: [-0.5055  0.3331], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0417, 0.4583], dtype=torch.float64), Delta+: [0.2861 0.    ], Delta-: [0.     0.1252], Delta: [ 0.2861 -0.1252], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.3333], dtype=torch.float64), Delta+: [0.2028 0.    ], Delta-: [0.     0.0002], Delta: [ 0.2028 -0.0002], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2917, 0.0417], dtype=torch.float64), Delta+: [0.0361 0.2914], Delta-: [0. 0.], Delta: [0.0361 0.2914], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.5833], dtype=torch.float64), Delta+: [0.2028 0.    ], Delta-: [0.     0.2502], Delta: [ 0.2028 -0.2502], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2083, 0.0417], dtype=torch.float64), Delta+: [0.1195 0.2914], Delta-: [0. 0.], Delta: [0.1195 0.2914], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5833, 0.2083], dtype=torch.float64), Delta+: [0.     0.1248], Delta-: [0.2555 0.    ], Delta: [-0.2555  0.1248], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4583, 0.2083], dtype=torch.float64), Delta+: [0.     0.1248], Delta-: [0.1305 0.    ], Delta: [-0.1305  0.1248], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5833, 0.1667], dtype=torch.float64), Delta+: [0.     0.1664], Delta-: [0.2555 0.    ], Delta: [-0.2555  0.1664], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.2083, 0.1250], dtype=torch.float64), Delta+: [0.1195 0.2081], Delta-: [0. 0.], Delta: [0.1195 0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.7500, 0.0417], dtype=torch.float64), Delta+: [0.     0.2914], Delta-: [0.4222 0.    ], Delta: [-0.4222  0.2914], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0000, 0.2917], dtype=torch.float64), Delta+: [0.3278 0.0414], Delta-: [0. 0.], Delta: [0.3278 0.0414], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.4583, 0.1250], dtype=torch.float64), Delta+: [0.     0.2081], Delta-: [0.1305 0.    ], Delta: [-0.1305  0.2081], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.7917], dtype=torch.float64), Delta+: [0.2028 0.    ], Delta-: [0.     0.4586], Delta: [ 0.2028 -0.4586], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0417, 0.4167], dtype=torch.float64), Delta+: [0.2861 0.    ], Delta-: [0.     0.0836], Delta: [ 0.2861 -0.0836], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.6250, 0.2917], dtype=torch.float64), Delta+: [0.     0.0414], Delta-: [0.2972 0.    ], Delta: [-0.2972  0.0414], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.1250, 0.1667], dtype=torch.float64), Delta+: [0.2028 0.1664], Delta-: [0. 0.], Delta: [0.2028 0.1664], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.5000, 0.0833], dtype=torch.float64), Delta+: [0.     0.2498], Delta-: [0.1722 0.    ], Delta: [-0.1722  0.2498], Omega: [[0.3278 0.3331]], bt: 0.3383
Best solution found. Point: tensor([0.0000, 0.5000], dtype=torch.float64), Delta+: [0.3278 0.    ], Delta-: [0.     0.1669], Delta: [ 0.3278 -0.1669], Omega: [[0.3278 0.3331]], bt: 0.3383
Failure Rate: 0.00%
Step 2e: Train GPR models for inside and outside NTR
train gp model_in done 
train gp model_out done
Time step 0
include consumption: False
Step 2a: Approximate NTR
starting point [0. 0.]
direction [-0.333 -0.333]
Center Point: [0.333 0.333], Edge Point: [0.2486 0.2486]
starting point [0. 1.]
direction [-0.333  0.667]
Center Point: [0.333 0.333], Edge Point: [0.3154 0.3682]
starting point [0.5 0.5]
direction [0.167 0.167]
Center Point: [0.333 0.333], Edge Point: [0.3929 0.3929]
Center of NTR: [0.333 0.333], Radius of NTR: 0.1194
Step 2b: Sample state points
Best solution found. Point: tensor([0.3391, 0.2148], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3391 0.2148]], bt: 0.4462
Best solution found. Point: tensor([0.3425, 0.3352], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3425 0.3352]], bt: 0.3223
/opt/anaconda3/envs/Peytz2/lib/python3.11/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(io.BytesIO(b))
/opt/anaconda3/envs/Peytz2/lib/python3.11/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(io.BytesIO(b))
Best solution found. Point: tensor([0.3162, 0.3652], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3162 0.3652]], bt: 0.3186
Best solution found. Point: tensor([0.4019, 0.2535], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4019 0.2535]], bt: 0.3446
Best solution found. Point: tensor([0.2894, 0.3236], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2894 0.3236]], bt: 0.3869
Best solution found. Point: tensor([0.3355, 0.3016], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3355 0.3016]], bt: 0.3629
Best solution found. Point: tensor([0.2489, 0.3345], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2489 0.3345]], bt: 0.4165
Best solution found. Point: tensor([0.4108, 0.3285], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4108 0.3285]], bt: 0.2607
Best solution found. Point: tensor([0.3589, 0.4455], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3589 0.4455]], bt: 0.1956
Best solution found. Point: tensor([0.3502, 0.3950], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3502 0.395 ]], bt: 0.2547
Best solution found. Point: tensor([0.2792, 0.4181], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2792 0.4181]], bt: 0.3027
Best solution found. Point: tensor([0.3141, 0.3743], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3141 0.3743]], bt: 0.3116
Best solution found. Point: tensor([0.2307, 0.3934], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2307 0.3934]], bt: 0.3758
Best solution found. Point: tensor([0.4046, 0.3693], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4046 0.3693]], bt: 0.2261
Best solution found. Point: tensor([0.3783, 0.2673], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3783 0.2673]], bt: 0.3544
Best solution found. Point: tensor([0.3011, 0.4159], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3011 0.4159]], bt: 0.283
Best solution found. Point: tensor([0.3184, 0.4020], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3184 0.402 ]], bt: 0.2795
Best solution found. Point: tensor([0.2625, 0.2851], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2625 0.2851]], bt: 0.4524
Best solution found. Point: tensor([0.2406, 0.3023], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2406 0.3023]], bt: 0.4571
Best solution found. Point: tensor([0.3026, 0.3453], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3026 0.3453]], bt: 0.3521
Best solution found. Point: tensor([0.2585, 0.3936], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2585 0.3936]], bt: 0.348
Best solution found. Point: tensor([0.3952, 0.2774], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3952 0.2774]], bt: 0.3274
Best solution found. Point: tensor([0.3571, 0.3151], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3571 0.3151]], bt: 0.3278
Best solution found. Point: tensor([0.3651, 0.4077], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3651 0.4077]], bt: 0.2272
Best solution found. Point: tensor([0.4216, 0.3073], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4216 0.3073]], bt: 0.2712
Best solution found. Point: tensor([0.2977, 0.3177], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2977 0.3177]], bt: 0.3846
Best solution found. Point: tensor([0.2945, 0.3830], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2945 0.383 ]], bt: 0.3225
Best solution found. Point: tensor([0.2773, 0.4087], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2773 0.4087]], bt: 0.314
Best solution found. Point: tensor([0.3088, 0.2437], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3088 0.2437]], bt: 0.4475
Best solution found. Point: tensor([0.4182, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.4182 0.3333]], bt: 0.2484
Best solution found. Point: tensor([0.2869, 0.4293], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2869 0.4293]], bt: 0.2838
Best solution found. Point: tensor([0.3219, 0.4327], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3219 0.4327]], bt: 0.2454
Best solution found. Point: tensor([0.2990, 0.4297], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.299  0.4297]], bt: 0.2713
Best solution found. Point: tensor([0.2207, 0.2954], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2207 0.2954]], bt: 0.4839
Best solution found. Point: tensor([0.2776, 0.3514], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.2776 0.3514]], bt: 0.371
Best solution found. Point: tensor([0.3379, 0.4345], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3379 0.4345]], bt: 0.2276
Best solution found. Point: tensor([0.3608, 0.2489], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0. 0.], Delta: [0. 0.], Omega: [[0.3608 0.2489]], bt: 0.3902
Best solution found. Point: tensor([0.4535, 0.3351], dtype=torch.float64), Delta+: [0. 0.], Delta-: [ 0.1245 -0.    ], Delta: [-0.1245  0.    ], Omega: [[0.3291 0.3351]], bt: 0.3351
Best solution found. Point: tensor([0.4494, 0.3726], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1196 0.036 ], Delta: [-0.1196 -0.036 ], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4540, 0.3542], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1242 0.0177], Delta: [-0.1242 -0.0177], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4409, 0.3937], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1111 0.0571], Delta: [-0.1111 -0.0571], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4276, 0.4096], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0978 0.0731], Delta: [-0.0978 -0.0731], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4124, 0.4248], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0826 0.0883], Delta: [-0.0826 -0.0883], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3986, 0.4352], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0688 0.0987], Delta: [-0.0688 -0.0987], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3576, 0.4525], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0278 0.116 ], Delta: [-0.0278 -0.116 ], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3793, 0.4447], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0495 0.1081], Delta: [-0.0495 -0.1081], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3187, 0.4544], dtype=torch.float64), Delta+: [0.0111 0.    ], Delta-: [0.     0.1178], Delta: [ 0.0111 -0.1178], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2970, 0.4513], dtype=torch.float64), Delta+: [0.0328 0.    ], Delta-: [0.     0.1148], Delta: [ 0.0328 -0.1148], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3383, 0.4541], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0085 0.1176], Delta: [-0.0085 -0.1176], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2785, 0.4421], dtype=torch.float64), Delta+: [0.1133 0.    ], Delta-: [0.     0.1474], Delta: [ 0.1133 -0.1474], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2602, 0.4300], dtype=torch.float64), Delta+: [0.1315 0.    ], Delta-: [0.     0.1353], Delta: [ 0.1315 -0.1353], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2432, 0.4179], dtype=torch.float64), Delta+: [0.1486 0.    ], Delta-: [0.     0.1232], Delta: [ 0.1486 -0.1232], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2300, 0.4011], dtype=torch.float64), Delta+: [0.1618 0.    ], Delta-: [0.     0.1064], Delta: [ 0.1618 -0.1064], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2133, 0.3637], dtype=torch.float64), Delta+: [0.1165 0.    ], Delta-: [0.     0.0271], Delta: [ 0.1165 -0.0271], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2082, 0.3414], dtype=torch.float64), Delta+: [0.1835 0.    ], Delta-: [0.     0.0467], Delta: [ 0.1835 -0.0467], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2104, 0.3228], dtype=torch.float64), Delta+: [0.0718 0.0677], Delta-: [0. 0.], Delta: [0.0718 0.0677], Omega: [[0.2822 0.3905]], bt: 0.3266
Best solution found. Point: tensor([0.2146, 0.3008], dtype=torch.float64), Delta+: [ 0.1827 -0.    ], Delta-: [0. 0.], Delta: [ 0.1827 -0.    ], Omega: [[0.3972 0.3008]], bt: 0.3012
Best solution found. Point: tensor([0.2188, 0.2816], dtype=torch.float64), Delta+: [0.111  0.0549], Delta-: [0. 0.], Delta: [0.111  0.0549], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2298, 0.2619], dtype=torch.float64), Delta+: [0.1619 0.0328], Delta-: [0. 0.], Delta: [0.1619 0.0328], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2428, 0.2497], dtype=torch.float64), Delta+: [0.149 0.045], Delta-: [0. 0.], Delta: [0.149 0.045], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2613, 0.2330], dtype=torch.float64), Delta+: [0.1304 0.0617], Delta-: [0. 0.], Delta: [0.1304 0.0617], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2792, 0.2222], dtype=torch.float64), Delta+: [0.0506 0.1144], Delta-: [0. 0.], Delta: [0.0506 0.1144], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2969, 0.2139], dtype=torch.float64), Delta+: [0.0329 0.1227], Delta-: [0. 0.], Delta: [0.0329 0.1227], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3176, 0.2099], dtype=torch.float64), Delta+: [0.0122 0.1266], Delta-: [0. 0.], Delta: [0.0122 0.1266], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3386, 0.2104], dtype=torch.float64), Delta+: [0.     0.1261], Delta-: [0.0088 0.    ], Delta: [-0.0088  0.1261], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3584, 0.2150], dtype=torch.float64), Delta+: [0.     0.1215], Delta-: [0.0286 0.    ], Delta: [-0.0286  0.1215], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3791, 0.2168], dtype=torch.float64), Delta+: [0.     0.1197], Delta-: [0.0493 0.    ], Delta: [-0.0493  0.1197], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3951, 0.2292], dtype=torch.float64), Delta+: [0.     0.1073], Delta-: [0.0653 0.    ], Delta: [-0.0653  0.1073], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4141, 0.2407], dtype=torch.float64), Delta+: [0.     0.0958], Delta-: [0.0843 0.    ], Delta: [-0.0843  0.0958], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4271, 0.2558], dtype=torch.float64), Delta+: [0.     0.0807], Delta-: [0.0973 0.    ], Delta: [-0.0973  0.0807], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4383, 0.2726], dtype=torch.float64), Delta+: [0.     0.0639], Delta-: [0.1085 0.    ], Delta: [-0.1085  0.0639], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4493, 0.2903], dtype=torch.float64), Delta+: [0.     0.0462], Delta-: [0.1195 0.    ], Delta: [-0.1195  0.0462], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4552, 0.3110], dtype=torch.float64), Delta+: [0.     0.0255], Delta-: [0.1254 0.    ], Delta: [-0.1254  0.0255], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0833, 0.5833], dtype=torch.float64), Delta+: [0.2465 0.    ], Delta-: [0.     0.2468], Delta: [ 0.2465 -0.2468], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4583, 0.0000], dtype=torch.float64), Delta+: [0.     0.3365], Delta-: [0.1285 0.    ], Delta: [-0.1285  0.3365], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2083, 0.3333], dtype=torch.float64), Delta+: [0.12 0.  ], Delta-: [ 0. -0.], Delta: [0.12 0.  ], Omega: [[0.3283 0.3333]], bt: 0.3376
Best solution found. Point: tensor([0.2500, 0.6667], dtype=torch.float64), Delta+: [0.0798 0.    ], Delta-: [0.     0.3301], Delta: [ 0.0798 -0.3301], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4167, 0.0833], dtype=torch.float64), Delta+: [0.     0.2532], Delta-: [0.0869 0.    ], Delta: [-0.0869  0.2532], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4167, 0.5833], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0869 0.2468], Delta: [-0.0869 -0.2468], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1250, 0.7500], dtype=torch.float64), Delta+: [0.2668 0.    ], Delta-: [0.     0.4553], Delta: [ 0.2668 -0.4553], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.0000, 0.7500], dtype=torch.float64), Delta+: [0.3298 0.    ], Delta-: [0.     0.4135], Delta: [ 0.3298 -0.4135], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.7500, 0.0000], dtype=torch.float64), Delta+: [0.     0.3365], Delta-: [0.4202 0.    ], Delta: [-0.4202  0.3365], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0833, 0.3333], dtype=torch.float64), Delta+: [0.245 0.   ], Delta-: [ 0. -0.], Delta: [0.245 0.   ], Omega: [[0.3283 0.3333]], bt: 0.3376
Best solution found. Point: tensor([0.4167, 0.2083], dtype=torch.float64), Delta+: [0.     0.1282], Delta-: [0.0869 0.    ], Delta: [-0.0869  0.1282], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.5833, 0.1667], dtype=torch.float64), Delta+: [0.     0.1699], Delta-: [0.2535 0.    ], Delta: [-0.2535  0.1699], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3750, 0.5417], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0452 0.2051], Delta: [-0.0452 -0.2051], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1250, 0.5833], dtype=torch.float64), Delta+: [0.2048 0.    ], Delta-: [0.     0.2468], Delta: [ 0.2048 -0.2468], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.7917, 0.0833], dtype=torch.float64), Delta+: [0.     0.2532], Delta-: [0.4619 0.    ], Delta: [-0.4619  0.2532], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2083, 0.5833], dtype=torch.float64), Delta+: [0.1215 0.    ], Delta-: [0.     0.2468], Delta: [ 0.1215 -0.2468], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1667, 0.0000], dtype=torch.float64), Delta+: [0.1631 0.3365], Delta-: [0. 0.], Delta: [0.1631 0.3365], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2917, 0.7083], dtype=torch.float64), Delta+: [0.0381 0.    ], Delta-: [0.     0.3718], Delta: [ 0.0381 -0.3718], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2209, 0.3844], dtype=torch.float64), Delta+: [0.1709 0.    ], Delta-: [0.     0.0897], Delta: [ 0.1709 -0.0897], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.0000, 0.7917], dtype=torch.float64), Delta+: [0.3298 0.    ], Delta-: [0.     0.4551], Delta: [ 0.3298 -0.4551], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.7917, 0.2083], dtype=torch.float64), Delta+: [0.     0.0864], Delta-: [0.3999 0.    ], Delta: [-0.3999  0.0864], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.5000, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [ 0.1717 -0.    ], Delta: [-0.1717  0.    ], Omega: [[0.3283 0.3333]], bt: 0.3376
Best solution found. Point: tensor([0.5000, 0.0000], dtype=torch.float64), Delta+: [0.     0.3365], Delta-: [0.1702 0.    ], Delta: [-0.1702  0.3365], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4583, 0.5000], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.1285 0.1635], Delta: [-0.1285 -0.1635], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.7083, 0.1667], dtype=torch.float64), Delta+: [0.     0.1699], Delta-: [0.3785 0.    ], Delta: [-0.3785  0.1699], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.5000, 0.0833], dtype=torch.float64), Delta+: [0.     0.2532], Delta-: [0.1702 0.    ], Delta: [-0.1702  0.2532], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.8750, 0.1250], dtype=torch.float64), Delta+: [0.     0.2115], Delta-: [0.5452 0.    ], Delta: [-0.5452  0.2115], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2917, 0.1250], dtype=torch.float64), Delta+: [0.0381 0.2115], Delta-: [0. 0.], Delta: [0.0381 0.2115], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3333, 0.6250], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0035 0.2885], Delta: [-0.0035 -0.2885], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0417, 0.5833], dtype=torch.float64), Delta+: [0.2881 0.    ], Delta-: [0.     0.2468], Delta: [ 0.2881 -0.2468], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.4167, 0.0417], dtype=torch.float64), Delta+: [0.     0.2949], Delta-: [0.0869 0.    ], Delta: [-0.0869  0.2949], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1250, 0.1250], dtype=torch.float64), Delta+: [0.2048 0.2115], Delta-: [0. 0.], Delta: [0.2048 0.2115], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.6667, 0.1667], dtype=torch.float64), Delta+: [0.     0.1699], Delta-: [0.3369 0.    ], Delta: [-0.3369  0.1699], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0417, 0.7500], dtype=torch.float64), Delta+: [0.2881 0.    ], Delta-: [0.     0.4135], Delta: [ 0.2881 -0.4135], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.5417, 0.1250], dtype=torch.float64), Delta+: [0.     0.2115], Delta-: [0.2119 0.    ], Delta: [-0.2119  0.2115], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.5417, 0.2083], dtype=torch.float64), Delta+: [0.     0.1282], Delta-: [0.2119 0.    ], Delta: [-0.2119  0.1282], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2500, 0.1667], dtype=torch.float64), Delta+: [0.1418 0.128 ], Delta-: [0. 0.], Delta: [0.1418 0.128 ], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.1667, 0.5000], dtype=torch.float64), Delta+: [0.1631 0.    ], Delta-: [0.     0.1635], Delta: [ 0.1631 -0.1635], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.7917, 0.0000], dtype=torch.float64), Delta+: [0.     0.3365], Delta-: [0.4619 0.    ], Delta: [-0.4619  0.3365], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1667, 0.6250], dtype=torch.float64), Delta+: [0.1631 0.    ], Delta-: [0.     0.2885], Delta: [ 0.1631 -0.2885], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0833, 0.3750], dtype=torch.float64), Delta+: [0.3084 0.    ], Delta-: [0.     0.0803], Delta: [ 0.3084 -0.0803], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0., 0.], dtype=torch.float64), Delta+: [0.3298 0.3365], Delta-: [0. 0.], Delta: [0.3298 0.3365], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3750, 0.0000], dtype=torch.float64), Delta+: [0.     0.3365], Delta-: [0.0452 0.    ], Delta: [-0.0452  0.3365], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0417, 0.6667], dtype=torch.float64), Delta+: [0.2881 0.    ], Delta-: [0.     0.3301], Delta: [ 0.2881 -0.3301], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2083, 0.4167], dtype=torch.float64), Delta+: [-0.  0.], Delta-: [0.     0.0352], Delta: [-0.     -0.0352], Omega: [[0.2083 0.3815]], bt: 0.4095
Best solution found. Point: tensor([0.1667, 0.5417], dtype=torch.float64), Delta+: [0.1631 0.    ], Delta-: [0.     0.2051], Delta: [ 0.1631 -0.2051], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0417, 0.0417], dtype=torch.float64), Delta+: [0.2881 0.2949], Delta-: [0. 0.], Delta: [0.2881 0.2949], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.5833, 0.4167], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.2535 0.0801], Delta: [-0.2535 -0.0801], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0833, 0.0833], dtype=torch.float64), Delta+: [0.2465 0.2532], Delta-: [0. 0.], Delta: [0.2465 0.2532], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.5417, 0.2500], dtype=torch.float64), Delta+: [0.     0.0865], Delta-: [0.2119 0.    ], Delta: [-0.2119  0.0865], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2083, 0.3750], dtype=torch.float64), Delta+: [0.1834 0.    ], Delta-: [0.     0.0803], Delta: [ 0.1834 -0.0803], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.8333, 0.1667], dtype=torch.float64), Delta+: [0.     0.1699], Delta-: [0.5035 0.    ], Delta: [-0.5035  0.1699], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0417, 0.3750], dtype=torch.float64), Delta+: [0.3501 0.    ], Delta-: [0.     0.0803], Delta: [ 0.3501 -0.0803], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.0000, 0.5417], dtype=torch.float64), Delta+: [0.3298 0.    ], Delta-: [0.     0.2051], Delta: [ 0.3298 -0.2051], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0417, 0.9167], dtype=torch.float64), Delta+: [0.2881 0.    ], Delta-: [0.     0.5801], Delta: [ 0.2881 -0.5801], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0833, 0.5000], dtype=torch.float64), Delta+: [0.2465 0.    ], Delta-: [0.     0.1635], Delta: [ 0.2465 -0.1635], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.6667, 0.2083], dtype=torch.float64), Delta+: [0.     0.1282], Delta-: [0.3369 0.    ], Delta: [-0.3369  0.1282], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.6250, 0.0833], dtype=torch.float64), Delta+: [0.     0.2532], Delta-: [0.2952 0.    ], Delta: [-0.2952  0.2532], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1667, 0.7917], dtype=torch.float64), Delta+: [0.1631 0.    ], Delta-: [0.     0.4551], Delta: [ 0.1631 -0.4551], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.6667, 0.3333], dtype=torch.float64), Delta+: [0. 0.], Delta-: [ 0.3384 -0.    ], Delta: [-0.3384  0.    ], Omega: [[0.3283 0.3333]], bt: 0.3376
Best solution found. Point: tensor([0.0000, 0.7083], dtype=torch.float64), Delta+: [0.3298 0.    ], Delta-: [0.     0.3718], Delta: [ 0.3298 -0.3718], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2083, 0.2917], dtype=torch.float64), Delta+: [0.1834 0.003 ], Delta-: [0. 0.], Delta: [0.1834 0.003 ], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.2500, 0.2083], dtype=torch.float64), Delta+: [0.0798 0.1282], Delta-: [0. 0.], Delta: [0.0798 0.1282], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2917, 0.5417], dtype=torch.float64), Delta+: [0.0381 0.    ], Delta-: [0.     0.2051], Delta: [ 0.0381 -0.2051], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1250, 0.4583], dtype=torch.float64), Delta+: [0.2048 0.    ], Delta-: [0.     0.1218], Delta: [ 0.2048 -0.1218], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.2083, 0.0417], dtype=torch.float64), Delta+: [0.1215 0.2949], Delta-: [0. 0.], Delta: [0.1215 0.2949], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.9167, 0.0417], dtype=torch.float64), Delta+: [0.     0.3488], Delta-: [0.6345 0.    ], Delta: [-0.6345  0.3488], Omega: [[0.2822 0.3905]], bt: 0.3266
Best solution found. Point: tensor([0.7083, 0.1250], dtype=torch.float64), Delta+: [0.     0.2115], Delta-: [0.3785 0.    ], Delta: [-0.3785  0.2115], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3750, 0.5833], dtype=torch.float64), Delta+: [0. 0.], Delta-: [0.0452 0.2468], Delta: [-0.0452 -0.2468], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.1250, 0.8750], dtype=torch.float64), Delta+: [0.2668 0.    ], Delta-: [0.     0.5803], Delta: [ 0.2668 -0.5803], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.0000, 0.6250], dtype=torch.float64), Delta+: [0.3298 0.    ], Delta-: [0.     0.2885], Delta: [ 0.3298 -0.2885], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.3750, 0.2083], dtype=torch.float64), Delta+: [0.     0.1282], Delta-: [0.0452 0.    ], Delta: [-0.0452  0.1282], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([1., 0.], dtype=torch.float64), Delta+: [0.     0.2947], Delta-: [0.6082 0.    ], Delta: [-0.6082  0.2947], Omega: [[0.3918 0.2947]], bt: 0.3128
Best solution found. Point: tensor([0.0000, 0.0833], dtype=torch.float64), Delta+: [0.2822 0.3071], Delta-: [0. 0.], Delta: [0.2822 0.3071], Omega: [[0.2822 0.3905]], bt: 0.3266
Best solution found. Point: tensor([0.5833, 0.0833], dtype=torch.float64), Delta+: [0.     0.2532], Delta-: [0.2535 0.    ], Delta: [-0.2535  0.2532], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.7500, 0.2500], dtype=torch.float64), Delta+: [0.     0.0865], Delta-: [0.4202 0.    ], Delta: [-0.4202  0.0865], Omega: [[0.3298 0.3365]], bt: 0.3329
Best solution found. Point: tensor([0.0417, 0.2500], dtype=torch.float64), Delta+: [0.3501 0.0447], Delta-: [0. 0.], Delta: [0.3501 0.0447], Omega: [[0.3918 0.2947]], bt: 0.3128
Failure Rate: 0.00%
Step 2e: Train GPR models for inside and outside NTR
train gp model_in done 
train gp model_out done
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/2755596494.py:56: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f'Time {t}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/2730767749.py:56: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f'Time {t}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/2731587173.py:56: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f'Time {t}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/1202333786.py:56: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f'Time {t}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/2906405607.py:56: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f'Time {t}')
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/1023292042.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{t}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/3067402552.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{T-t}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/2683395129.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{t+1}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/2163572736.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{t+1}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/3246618454.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{t+1}')
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/1990425690.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{t+1}')
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/641456155.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{t+1}')
[{"variableName": "L", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "NTR_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "Sigma", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "V", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "X_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "all_points", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_NTR", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "center_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "colors", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "edge_points_array", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "expnodes", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "in_ntr_value", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "merton_p", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "mu", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_around_kinks", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_inside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "points_outside_ntr", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "radii", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "refinement", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "results", "type": "list", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "weights", "type": "ndarray", "supportedEngines": ["pandas"], "isLocalVariable": false}, {"variableName": "x_i_t", "type": "tensor", "supportedEngines": ["pandas"], "isLocalVariable": false}]
/var/folders/hz/t94d7ym95fx1sf3fpl6b9bcm0000gn/T/ipykernel_69611/2958561186.py:58: UserWarning: Setting the 'color' property will override the edgecolor or facecolor properties.
  circle = Circle(center, radius, color=color, edgecolor='k', linewidth=1, label=f't = T-{t+1}')
